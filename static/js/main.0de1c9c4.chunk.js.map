{"version":3,"sources":["components/Spinner.js","components/TxDetails.js","cadence/transctions/addRegularChallenge.js","components/Header.js","components/Footer.js","images/ajax.png","images/psv.png","components/ModalForSelectingFC.js","components/ModalForSetUp.js","components/scenes/ChallengeScene.js","components/scenes/MyCollectionsScene.js","components/scenes/PackScene.js","components/TemplateCreation.js","components/PackCollectionCreation.js","components/FootballClipToPackAddition.js","components/scenes/AdminScene.js","components/scenes/MarketplaceScene.js","components/scenes/HomeScene.js","App.js","cadence/transctions/purchaseFootballClip.js","cadence/transctions/purchasePlayer.js","cadence/transctions/createFamily.js","cadence/transctions/addTemplateToFamily.js","cadence/transctions/listFootballClipForSale.js","cadence/transctions/listPlayerForSale.js","cadence/transctions/unlistFootballClipFromSale.js","cadence/transctions/destroyFamily.js","cadence/transctions/unlistPlayerFromSale.js","cadence/transctions/setUpUser.js","cadence/scripts/getUserFootballClips.js","cadence/scripts/getUserPlayers.js","cadence/scripts/getAllSellingFootballClips.js","cadence/scripts/getAllSellingPlayers.js","cadence/scripts/getUserFootballClipsForSale.js","cadence/scripts/getUserPlayersForSale.js","cadence/transctions/createFootballClipTemplate.js","cadence/transctions/createPlayerTemplate.js","cadence/scripts/getTemplatesOfFootballClips.js","cadence/scripts/getTemplatesOfPlayers.js","cadence/scripts/getFamilies.js","cadence/scripts/getCompletedChallangesOfUser.js","cadence/transctions/deleteFootballClipTemplate.js","cadence/transctions/batchMintFootballClipsFromFamily.js","cadence/transctions/addSpecialChallenge.js","cadence/scripts/getRegularCustomizedChallenges.js","cadence/scripts/getSpecialCustomizedChallange.js","cadence/transctions/mintRewardForCompletingChallenge.js","reportWebVitals.js","index.js"],"names":["Spinner","className","TxDetails","id","Header","props","useContext","HeaderContext","setIsUserSearchingForMarketplaceOfPlayers","setIsUserSearchingForRegularChallenges","setIsUserSearchingForSpecialChallenge","setIsUserSearchingForPlayerSaleCollection","setIsUserSearchingForPlayerCollection","setIsUserSearchingForMarketplaceOfFootballClips","getSellingPlayersOfUsers","logout","user","login","setIsUserSearchingForSaleCollection","getSellingFootballClips","getUserSaleNFTs","getUserNFTs","checkIfUserIsAdmin","isAdmin","setIsUserSearchingForCollection","navigate","useNavigate","AppBar","style","background","Toolbar","margin","Button","color","onClick","a","fcl","snapshot","currentUser","addr","marginLeft","startIcon","position","Footer","display","justifyContent","textAlign","href","icon","faDiscord","faGithub","faTwitter","faInstagram","ModalForSelectingFC","setIsModalWindowOpenedToSelectFC","flexWrap","flexDirection","src","img1","chooseFavouriteFootballClub","setIsModalWindowOpened","width","height","img3","ModalForSetUp","setUpUser","ChallengeScene","ChallengeContext","getUserPlayerNFTs","playerNFTs","isModalWindowOpened","isModalWindowOpenedToSelectFC","specialChallenges","listSpecialChallenges","isUserSearchingForSpecialChallenge","isUserSearchingForRegularChallenges","isSetUpMade","setIsUserLoggedIn","isUserLoggedIn","loading","getPlayerTemplates","listCompletedChallenges","completedChallenges","mintRewardForCompletingChallenge","listChallenges","nfts","templates","challenges","playerTemplates","getFootballClipTemplates","useState","hasUserCompletedAllChallenges","useEffect","isUserLoggedIn1","window","localStorage","getItem","JSON","parse","setItem","stringify","checkClaimReward","task","counter","map","nft","templateId","data","templateID","length","checkWhetherUserAlreadyOwnsPlayer","isUserOwning","marginTop","marginRight","marginBottom","variant","fontFamily","Object","keys","challengeID","hasUserCompletedChallange","console","log","challengeId","checkWhetherUserHasCompletedChallenge","padding","borderRadius","border","name","autoPlay","loop","ipfs","type","reward","Modal","open","onClose","MyCollectionsScene","MyCollectionsContext","listPlayerNFTForSale","unListPlayerNftFromSale","isUserSearchingForPlayerCollection","isUserSearchingForPlayerSaleCollection","getUserPlayerSaleNFTs","salePlayerNFTs","setPlayerNFTs","setSalePlayerNFTs","setPrice","setLoading","unListForSale","listNFTForSale","isUserSearchingForCollection","isUserSearchingForSaleCollection","saleNfts","classes","makeStyles","textField","useStyles","TextField","InputLabelProps","InputProps","size","placeholder","label","onChange","e","target","value","nftID","nftRef","price","PackScene","PackContext","openPack","families","listFamilies","family","template","familyID","TemplateCreation","AdminContext","makePlayerTemplate","setFile","setName","setRarity","makeFootballClipTemplate","autoComplete","htmlFor","files","Fab","component","PackCollectionCreation","setNameOfPackLaunch","createFamily","FootballClipToPackAddition","setPackLaunchID","addFootballClipToPackCollection","setTemplateID","AdminScene","setFamilyID","removePack","createSpecialChallenge","setFavouriteTeam","favouriteTeam","setTask","setReward","createChallenge","removeTemplate","input","Array","from","split","i","Number","MarketplaceScene","MarketplaceContext","buyPlayer","sellingPlayers","setSellingPlayers","isUserSearchingForMarketplaceOfPlayers","isUserSearchingForMarketplaceOfFootballClips","sellingNFTs","buyNFT","checkWhetherUserHasHisOwnNFTListed","isOwnedByUser","checkWhetherUserHasHisOwnPlayerListed","owner","HomeScene","HomeContext","client","create","put","React","createContext","App","setUser","nameOfNFT","nameOfPackLaunch","rarity","packLaunchID","file","idOfNFT","setIdOfNFT","setNFTs","setSaleNFTs","setTemplates","setPlayerTemplates","setFamilies","setChallenges","setSpecialChallenges","setSellingNFTs","setCompletedChallenges","searchableAddress","runningTxs","setIsAdmin","setSetUpMade","txs","setTxs","userAddress","getLocalTxs","txString","localTxs","index","getTxStatus","t","status","tx","subscribe","s","updateTxStatus","push","toString","addTx","txID","transaction","prev","find","oldTxs","filter","updatedTx","removeTx","newTxs","send","getTransactionStatus","then","decode","removeItem","alert","parseInt","transactionId","onceSealed","footballClub","error","result","address","add","added","hash","path","footballClipsToMint","chooseRandomFootballClipsFromPack","packID","randomNumber","Math","floor","random","backgroundColor","element","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0de1c9c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Spinner.css'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}","import React from 'react'\r\nimport Spinner from '../components/Spinner'\r\nimport './TxDetails.css'\r\n\r\nexport default function TxDetails({ id }) {\r\n    return (\r\n        <div className=\"tx__wrapper\">\r\n            <div className=\"tx__loader\">\r\n                <Spinner />\r\n            </div>\r\n            <div className=\"tx__content\">\r\n                <p>Tx: {id}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const addRegularChallenge=\r\n    `import FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\ntransaction(task:[UInt32], reward:[UInt32],favouriteTeam:String) {\r\n\r\nprepare(acct:AuthAccount){\r\n \r\n  let admin = acct.borrow<&FootballClipNFT.Admin>(from: FootballClipNFT.AdminStoragePath)\r\n                                                             ?? panic (\"This collection does not exist here\")                                                           \r\n\r\n  // access account storage of sender of transaction \r\n\r\n  admin.addChallenge(task:task,reward:reward,favouriteTeam:favouriteTeam)\r\n}\r\n\r\n}\r\n    `","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LoginIcon from \"@mui/icons-material/Login\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport * as fcl from \"@onflow/fcl\";\r\nimport React, {useContext, useEffect} from \"react\";\r\nimport {HeaderContext} from \"../App\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Header(props) {\r\n    const {setIsUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForRegularChallenges,setIsUserSearchingForSpecialChallenge,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,logout,user,login,setIsUserSearchingForSaleCollection,getSellingFootballClips,\r\n      getUserSaleNFTs,getUserNFTs,\r\n    checkIfUserIsAdmin,isAdmin,setIsUserSearchingForCollection}=useContext(HeaderContext);\r\n    const navigate=useNavigate();\r\n\r\n\r\n\r\n    //const[address,setAddress]=useState();\r\n\r\n    // const checkIfUserIsAdmin=async ()=>{\r\n    //     const currentUser = await fcl.currentUser.snapshot();\r\n    //     address=currentUser.addr;\r\n    //     console.log(address);\r\n    //     if(address==0xb7814dfc7710c1d1){\r\n    //         setIsAdmin(true);\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n\r\n        <header>\r\n            <AppBar style={{background:\"#4646b0\"}}>\r\n                <Toolbar>\r\n                    <MenuIcon style={{margin:\"10px\"}}/>\r\n                    <Button style={{margin:\"10px\",color:\"white\"}} onClick={async ()=>{const currentUser = await fcl.currentUser.snapshot();await getUserSaleNFTs(currentUser.addr); await getUserNFTs(); setIsUserSearchingForPlayerCollection(false);setIsUserSearchingForPlayerSaleCollection(false);setIsUserSearchingForSaleCollection(false);setIsUserSearchingForCollection(true);navigate('/userCollections')}}>My Collections</Button>\r\n                    <Button style={{margin:\"10px\",color:\"white\"}} onClick={async ()=>{await getSellingPlayersOfUsers();await getSellingFootballClips();setIsUserSearchingForMarketplaceOfFootballClips(true);setIsUserSearchingForMarketplaceOfPlayers(false);navigate('/marketplace')}}>Marketplace</Button>\r\n                    <Button style={{margin:\"10px\",color:\"white\"}} onClick={ async ()=>{const currentUser = await fcl.currentUser.snapshot();await getUserSaleNFTs(currentUser.addr); await getUserNFTs();setIsUserSearchingForRegularChallenges(true);setIsUserSearchingForSpecialChallenge(false);navigate('/challenges')}}>Challenges</Button>\r\n                    <Button style={{margin:\"10px\",color:\"white\"}} onClick={()=>{navigate('/packs')}}>Packs</Button>\r\n                    {isAdmin?\r\n                        <Button style={{margin:\"10px\",color:\"white\"}} onClick={()=>{navigate('/admin')}}>Admin</Button>\r\n                        :\"\"}\r\n                    {user&&user.addr? <Button style={{margin:\"10px\",marginLeft:\"70px\",color:\"white\"}} startIcon={<LogoutIcon/>} onClick={async ()=>{logout()}}>Logout</Button>:\r\n                        <Button style={{margin:\"10px\",marginLeft:\"70px\",color:\"white\"}} startIcon={<LoginIcon/>}  onClick={async ()=>{await login();await checkIfUserIsAdmin();\r\n                        }}>Login</Button>}\r\n                    <div style={{position:\"absolute\", marginLeft:\"60%\"}}>\r\n                        <span>Account address: {user&&user.addr?user.addr: 'PLEASE LOGIN'}</span>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"../styles/Footer.css\"\r\nimport {faCoffee} from \"@fortawesome/free-solid-svg-icons/faCoffee\";\r\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons\"\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\"\r\nimport {faInstagram} from \"@fortawesome/free-brands-svg-icons\"\r\nimport {faDiscord} from \"@fortawesome/free-brands-svg-icons\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nfunction Footer(props) {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\" style={{display:\"flex\",justifyContent:\"center\"}}>\r\n                    <div className=\"footer-col\">\r\n                        <h4 style={{textAlign:\"center\"}}>company</h4>\r\n                        <ul style={{textAlign:\"center\"}}>\r\n                            <li><a href=\"#\">about us</a></li>\r\n                            <li><a href=\"#\">our services</a></li>\r\n                            <li><a href=\"#\">privacy policy</a></li>\r\n                            <li><a href=\"#\">referral program</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"footer-col\">\r\n                        <h4 style={{textAlign:\"center\"}}>get help</h4>\r\n                        <ul style={{textAlign:\"center\"}}>\r\n                            <li><a href=\"#\">FAQ</a></li>\r\n                            <li><a href=\"#\">24/7 support</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"footer-col\">\r\n                        <h4 style={{textAlign:\"center\"}}>follow us</h4>\r\n                        <div className=\"social-links\" style={{textAlign:\"center\"}}>\r\n                            <a href=\"#\"><FontAwesomeIcon icon={faDiscord} /></a>\r\n                            <a href=\"#\"><FontAwesomeIcon icon={faGithub} /></a>\r\n                            <a href=\"#\"><FontAwesomeIcon icon={faTwitter} /></a>\r\n                            <a href=\"#\"><FontAwesomeIcon icon={faInstagram} /></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/ajax.96ec6aa9.png\";","export default __webpack_public_path__ + \"static/media/psv.59bad68b.png\";","import \"./ModalForSelectingFC.css\"\r\nimport React from \"react\";\r\nimport img1 from \"../images/ajax.png\"\r\nimport img2 from \"../images/feyenord.png\"\r\nimport img3 from \"../images/psv.png\"\r\n\r\n\r\n\r\nfunction ModalForSelectingFC(props) {\r\n\r\n    return (\r\n        // <Providers>\r\n        <div className=\"modalContainer2\">\r\n            <div className=\"titleCloseBtn\">\r\n                <button\r\n                    onClick={() => {\r\n                        props.setIsModalWindowOpenedToSelectFC(false);\r\n                    }}\r\n                >\r\n                    X\r\n                </button>\r\n            </div>\r\n            <div className=\"title\">\r\n                <h1>Please select your favourite football team</h1>\r\n            </div>\r\n            <div className=\"body\">\r\n                <p>After that you will be able to complete customized challenges</p>\r\n            </div>\r\n            <div className=\"footerOfModal\" style={{display:\"flex\",flexWrap:\"wrap\", flexDirection:\"row\" }}>\r\n                    <img src={img1} onClick={()=>{props.chooseFavouriteFootballClub(\"Ajax\");props.setIsModalWindowOpenedToSelectFC(false);props.setIsModalWindowOpened(true)}} style={{width:\"170px\",height:\"150px\"}}/>\r\n                <img src={img3} onClick={()=>{props.chooseFavouriteFootballClub(\"PSV\");props.setIsModalWindowOpenedToSelectFC(false);props.setIsModalWindowOpened(true)}} style={{width:\"170px\",height:\"160px\"}}/>\r\n            </div>\r\n        </div>\r\n        //  </Providers>\r\n    );\r\n}\r\n\r\nexport default ModalForSelectingFC;","import \"./ModalForSetUp.css\"\r\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction ModalForSetUp(props) {\r\n\r\n    return (\r\n        // <Providers>\r\n            <div className=\"modalContainer\">\r\n                <div className=\"titleCloseBtn\">\r\n                    <button\r\n                        onClick={() => {\r\n                            props.setIsModalWindowOpened(false);\r\n                        }}\r\n                    >\r\n                        X\r\n                    </button>\r\n                </div>\r\n                <div className=\"title\">\r\n                    <h1>Please set up your collection</h1>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <p>After that you will be able to open packs as well as buy football clips from other people</p>\r\n                </div>\r\n                <div className=\"footerOfModal\">\r\n                    <Button style={{margin:\"10px\",color:\"white\"}} color=\"secondary\" startIcon={<PowerSettingsNewIcon/>} onClick={()=>{props.setUpUser();props.setIsModalWindowOpened(false)}}>Set up</Button>\r\n                </div>\r\n            </div>\r\n        //  </Providers>\r\n    );\r\n}\r\n\r\nexport default ModalForSetUp;","import Button from \"@material-ui/core/Button\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport CallReceivedIcon from \"@mui/icons-material/CallReceived\";\r\nimport {ChallengeContext} from \"../../App\";\r\nimport * as fcl from \"@onflow/fcl\";\r\nimport Spinner from \"../Spinner\";\r\nimport Footer from \"../Footer\";\r\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport ModalForSelectingFC from \"../ModalForSelectingFC\";\r\nimport ModalForSetUp from \"../ModalForSetUp\";\r\nimport \"../challenges.css\"\r\n\r\n\r\n\r\nfunction ChallengeScene(props) {\r\n\r\n    const {getUserPlayerNFTs,getUserNFTs,playerNFTs,isModalWindowOpened,setIsModalWindowOpened,chooseFavouriteFootballClub,isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC,specialChallenges,listSpecialChallenges,setIsUserSearchingForSpecialChallenge,setIsUserSearchingForRegularChallenges,isUserSearchingForSpecialChallenge,isUserSearchingForRegularChallenges,isSetUpMade,setIsUserLoggedIn,isUserLoggedIn,setUpUser,loading,getPlayerTemplates,listCompletedChallenges,completedChallenges,\r\n        mintRewardForCompletingChallenge,listChallenges,\r\n        nfts,templates, challenges,playerTemplates,getFootballClipTemplates}=useContext(ChallengeContext);\r\n\r\n    const [hasUserCompletedAllChallenges,setHasUserCompletedAllChallenges]=useState(true);\r\n\r\n\r\n    useEffect(async ()=>{\r\n        const isUserLoggedIn1=window.localStorage.getItem(\"isUserLoggedIn\");\r\n        setIsUserLoggedIn(JSON.parse(isUserLoggedIn1));\r\n        const currentUser = await fcl.currentUser.snapshot()\r\n        setIsUserSearchingForRegularChallenges(true);\r\n        getFootballClipTemplates();\r\n        listChallenges();\r\n        listSpecialChallenges();\r\n        getPlayerTemplates();\r\n        listCompletedChallenges(currentUser.addr);\r\n    },[])\r\n\r\n    useEffect( ()=>{\r\n        window.localStorage.setItem(\"isUserLoggedIn\",JSON.stringify(isUserLoggedIn));\r\n    })\r\n\r\n    const checkClaimReward=(task)=>{\r\n        let counter=0;\r\n        nfts.map((nft) => {\r\n                task.map((templateId)=>{\r\n                    if(templateId===nft.data.templateID){\r\n                        counter++;\r\n                    }\r\n                })\r\n            }\r\n        )\r\n        if(counter===task.length){\r\n            return true;\r\n        } else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleClose=()=>{\r\n        setIsModalWindowOpened(false);\r\n    }\r\n\r\n    const handleCloseOfModalWindowToSelectFC=()=>{\r\n        setIsModalWindowOpenedToSelectFC(false);\r\n    }\r\n\r\n\r\n    let counter=0;\r\n\r\n    const checkWhetherUserAlreadyOwnsPlayer=(templateID)=>{\r\n        let isUserOwning=false;\r\n        playerNFTs.map(nft => {\r\n            if(nft.data.templateID==templateID){\r\n                isUserOwning=true;\r\n            }\r\n        });\r\n        return isUserOwning;\r\n    }\r\n\r\n    const checkWhetherUserAlreadyOwnsFootballClip=(templateID)=>{\r\n        let isUserOwning=false;\r\n        console.log(nfts);\r\n        nfts.map(nft => {\r\n            if(nft.data.templateID==templateID){\r\n                isUserOwning=true;\r\n            }\r\n        });\r\n       return isUserOwning;\r\n    }\r\n\r\n    const checkWhetherUserHasCompletedChallenge=(challengeID)=>{\r\n        let hasUserCompletedChallange=false;\r\n        console.log(\"ChallengeID \"+challengeID);\r\n        console.log(completedChallenges)\r\n        completedChallenges.map((challengeId)=>{\r\n            console.log(challengeId+\" \"+challengeID);\r\n            if(challengeId==challengeID){\r\n                hasUserCompletedChallange=true;\r\n            }\r\n        })\r\n        if(hasUserCompletedChallange){\r\n            counter++;\r\n            console.log(counter);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    if (loading) return <Spinner />\r\n\r\n    return (\r\n        <div className=\"background-challenges\">\r\n                <div style={{marginTop:\"50px\"}}>\r\n                    <Button startIcon={<SearchIcon/>} style={{marginRight:\"25px\",marginTop:\"50px\",marginBottom:\"25px\"}} color=\"primary\" variant=\"contained\" onClick={async ()=>{\r\n                      setIsUserSearchingForSpecialChallenge(false);\r\n                      setIsUserSearchingForRegularChallenges(true);\r\n                      await listChallenges();\r\n                    }}>Search regular challenges</Button>\r\n                    <Button startIcon={<SearchIcon/>} style={{marginRight:\"25px\",marginTop:\"50px\",marginBottom:\"25px\"}} color=\"primary\" variant=\"contained\" onClick={async ()=>{\r\n                        const currentUser = await fcl.currentUser.snapshot()\r\n                       getUserPlayerNFTs(currentUser.addr);\r\n                      setIsUserSearchingForSpecialChallenge(true);\r\n                       setIsUserSearchingForRegularChallenges(false);\r\n                       await listSpecialChallenges();\r\n                     }}>Search special challenge</Button>\r\n                    {isUserSearchingForRegularChallenges?\r\n                    <div style={{display:\"flex\",justifyContent:\"center\",flexDirection: \"column\"}}>\r\n                        <h1 style={{fontFamily:\"Helvetica\",color:\"white\"}}>Available regular challenges</h1>\r\n\r\n                        {(Object.keys(challenges).length!==0&&challenges)?Object.keys(challenges).map(challengeID => !checkWhetherUserHasCompletedChallenge(challengeID)?(\r\n                                <div id=\"challengeDescription\" style={{position:\"center\",margin:\"auto\",padding:\"15px\",background:\"#5c5ccf\",borderRadius:\"23px\", width:\"79%\",marginTop:\"20px\",marginBottom:\"15px\"}} key={challengeID}>\r\n                                    <h1 style={{fontFamily:\"Helvetica\"}}>ChallengeID: {challengeID}</h1>\r\n                                    <h1 style={{fontFamily:\"Helvetica\"}}>Task to collect following NFTs:</h1>\r\n                                    <div style={{display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\",margin:\"auto\"}}>\r\n                                        {challenges[challengeID].task.map(templateId=>(\r\n                                            <div style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\",padding:\"10px\"}}>\r\n                                                <h1>{templates[templateId].name}</h1>\r\n                                                <video style={{margin:\"10px\"}} height=\"320\" autoPlay loop>\r\n                                                    <source  src={`https://ipfs.infura.io/ipfs/${templates[templateId].ipfs}`} type='video/mp4'/>\r\n                                                </video>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <h1 style={{fontFamily:\"Helvetica\"}}>Reward for collecting the NFTs:</h1>\r\n                                    <div style={{display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\",margin:\"auto\"}}>\r\n                                        {challenges[challengeID].reward.map(templateId=>(\r\n                                            <div style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\",padding:\"10px\"}}>\r\n                                                <h1>{playerTemplates[templateId].name}</h1>\r\n                                                {/*<video style={{margin:\"10px\"}} height=\"320\" autoPlay loop>*/}\r\n                                                {/*    <source src={`https://ipfs.infura.io/ipfs/${templates[templateId].ipfs}`} type='video/mp4'/>*/}\r\n                                                {/*</video>*/}\r\n                                                <img src={`https://ipfs.infura.io/ipfs/${playerTemplates[templateId].ipfs}`} style={{width:\"325px\",height:\"300px\"}}/>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                    {checkClaimReward(challenges[challengeID].task)?\r\n                                        <div style={{margin:\"10px\"}}>\r\n                                            <Button startIcon={<CallReceivedIcon/>} style={{background:\"#4c4cc1\",color:\"white\",width:\"370px\"}} onClick={async ()=>{  const currentUser = await fcl.currentUser.snapshot();await mintRewardForCompletingChallenge(challengeID);await listChallenges();await listCompletedChallenges(currentUser.addr);\r\n                                                await getPlayerTemplates();}} variant=\"contained\">Claim the reward</Button>\r\n                                        </div>\r\n                                        :\"\"}\r\n                                </div>\r\n                            ):\"\"\r\n                        ):!isSetUpMade&&isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><div style={{marginTop:\"auto\",marginBottom:\"auto\", marginRight:\"25px\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please set up your collection first</h1></div>\r\n                            <div style={{marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                                <Button style={{margin:\"10px\",color:\"white\",background:\"#4c4cc1\", width:\"125px\",borderRadius:\"15px\"}} color=\"secondary\" startIcon={<PowerSettingsNewIcon/>} onClick={async ()=>{listChallenges();setIsModalWindowOpenedToSelectFC(true)}}>Set up</Button>\r\n                            </div>\r\n                            </div>:!isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1></div>:\r\n                            <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Ups... There are no challenges for you yet</h1></div>}\r\n                    </div>:\"\"}\r\n                    {(counter===Object.keys(challenges).length&&isUserLoggedIn&&Object.keys(challenges).length!==0&&challenges)?<div style={{\r\n                        height: \"700px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}><h1 style={{\r\n                        color: \"white\",\r\n                        margin: \"auto\"\r\n                    }}>Looks like you have completed all the existing regular challenges... Congrats!!!</h1></div>\r\n                        :\"\"\r\n                    }\r\n\r\n                    {isUserSearchingForSpecialChallenge?\r\n                        <div>\r\n                            <div style={{display:\"flex\",justifyContent:\"center\",flexDirection: \"column\"}}>\r\n                                <h1 style={{fontFamily:\"Helvetica\",color:\"white\"}}>Available special challenge</h1>\r\n\r\n                                {(specialChallenges.task)?(\r\n                                        <div id=\"challengeDescription\" style={{position:\"center\",margin:\"auto\",padding:\"15px\",background:\"#5c5ccf\",borderRadius:\"23px\", width:\"79%\",marginTop:\"20px\",marginBottom:\"15px\"}} key={specialChallenges.challengeID}>\r\n                                            <h1 style={{fontFamily:\"Helvetica\"}}>ChallengeID: {specialChallenges.challengeID}</h1>\r\n                                            <h1 style={{fontFamily:\"Helvetica\"}}>Task to collect following NFTs:</h1>\r\n                                            <div style={{display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\",margin:\"auto\"}}>\r\n                                                {specialChallenges.task.map(templateId=>(\r\n                                                    <div className={`${ checkWhetherUserAlreadyOwnsPlayer(templateId)? \"nftOwned\" : \"\"}`} style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\",padding:\"10px\"}}>\r\n                                                        <h1>{playerTemplates[templateId].name}</h1>\r\n                                                        <img src={`https://ipfs.infura.io/ipfs/${playerTemplates[templateId].ipfs}`} style={{width:\"325px\",height:\"300px\"}}/>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                            <h1 style={{fontFamily:\"Helvetica\"}}>Reward for collecting the NFTs:</h1>\r\n                                            <div style={{display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\",margin:\"auto\"}}>\r\n                                                {specialChallenges.reward.map(templateId=>(\r\n                                                    <div style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\",padding:\"10px\"}}>\r\n                                                        <h1>{playerTemplates[templateId].name}</h1>\r\n                                                        {/*<video style={{margin:\"10px\"}} height=\"320\" autoPlay loop>*/}\r\n                                                        {/*    <source src={`https://ipfs.infura.io/ipfs/${templates[templateId].ipfs}`} type='video/mp4'/>*/}\r\n                                                        {/*</video>*/}\r\n                                                        <img src={`https://ipfs.infura.io/ipfs/${playerTemplates[templateId].ipfs}`} style={{width:\"325px\",height:\"300px\"}}/>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n\r\n                                            {checkClaimReward(specialChallenges.task)?\r\n                                                <div style={{margin:\"10px\"}}>\r\n                                                    <Button startIcon={<CallReceivedIcon/>} style={{background:\"#4c4cc1\",color:\"white\",width:\"370px\"}} onClick={async ()=>{await mintRewardForCompletingChallenge(specialChallenges.challengeID);await listSpecialChallenges();await getUserPlayerNFTs()}} variant=\"contained\">Claim the reward</Button>\r\n                                                </div>\r\n                                                :\"\"}\r\n                                        </div>\r\n                                    ):hasUserCompletedAllChallenges&&isUserLoggedIn&&isSetUpMade?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Ups... There are no challenges for you yet</h1></div>:\r\n                                isUserLoggedIn&&!isSetUpMade?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><div style={{marginTop:\"auto\",marginBottom:\"auto\", marginRight:\"25px\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please set up your collection first</h1></div>\r\n                                    <div style={{marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                                        <Button style={{margin:\"10px\",color:\"white\",background:\"#4c4cc1\", width:\"125px\",borderRadius:\"15px\"}} color=\"secondary\" startIcon={<PowerSettingsNewIcon/>} onClick={async ()=>{setIsModalWindowOpenedToSelectFC(true)}}>Set up</Button>\r\n                                    </div>\r\n                                </div>:!isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1></div>:\r\n                                    <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Ups... There are no challenges for you yet</h1></div>}\r\n                            </div></div>:\"\"}\r\n\r\n                </div>\r\n            <Modal\r\n                open={isModalWindowOpenedToSelectFC}\r\n                onClose={handleCloseOfModalWindowToSelectFC}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <ModalForSelectingFC setIsModalWindowOpened={setIsModalWindowOpened} setIsModalWindowOpenedToSelectFC={setIsModalWindowOpenedToSelectFC} chooseFavouriteFootballClub={chooseFavouriteFootballClub}/>\r\n            </Modal>\r\n            <Modal\r\n                open={isModalWindowOpened}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <ModalForSetUp setIsModalWindowOpened={setIsModalWindowOpened} setUpUser={setUpUser}/>\r\n            </Modal>\r\n        <Footer/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ChallengeScene;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {MyCollectionsContext} from \"../../App\";\r\nimport * as fcl from \"@onflow/fcl\";\r\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\r\nimport RemovelistAddIcon from \"@mui/icons-material/PlaylistRemove\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Footer from \"../Footer\";\r\nimport Spinner from \"../Spinner\";\r\nimport \"../myCollections.css\"\r\n\r\nfunction MyCollectionsScene(props) {\r\n\r\n    const {listPlayerNFTForSale,unListPlayerNftFromSale,isUserSearchingForPlayerCollection,isUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,getUserPlayerNFTs,getUserPlayerSaleNFTs,playerNFTs,salePlayerNFTs,setPlayerNFTs,setSalePlayerNFTs,setIsUserLoggedIn,isUserLoggedIn,loading,setLoading,setPrice,unListForSale,listNFTForSale,setIsUserSearchingForCollection,setIsUserSearchingForSaleCollection,\r\n        getUserNFTs,getUserSaleNFTs,isUserSearchingForCollection,\r\n        isUserSearchingForSaleCollection,nfts,saleNfts}=useContext(MyCollectionsContext);\r\n\r\n\r\n    useEffect(async ()=>{\r\n        const isUserLoggedIn1=window.localStorage.getItem(\"isUserLoggedIn\");\r\n        setIsUserLoggedIn(JSON.parse(isUserLoggedIn1));\r\n        setIsUserSearchingForCollection(true);\r\n        console.log(\"NFTS \"+nfts);\r\n        console.log(nfts);\r\n        console.log(playerNFTs);\r\n    },[])\r\n    useEffect( ()=>{\r\n        window.localStorage.setItem(\"isUserLoggedIn\",JSON.stringify(isUserLoggedIn));\r\n    })\r\n\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        textField: {\r\n            color:\"white\",\r\n            \"&::placeholder\": {\r\n                color: \"white\"\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (loading) return <Spinner />\r\n\r\n    return (\r\n        <div className=\"background-collections\">\r\n        <div style={{marginTop:\"50px\"}}>\r\n        <Button startIcon={<SearchIcon/>} style={{marginRight:\"25px\",marginTop:\"50px\",marginBottom:\"50px\"}} color=\"primary\" variant=\"contained\" onClick={async ()=>{const currentUser = await fcl.currentUser.snapshot();getUserNFTs(currentUser.addr);setIsUserSearchingForCollection(true);\r\n        setIsUserSearchingForSaleCollection(false);\r\n        setIsUserSearchingForPlayerCollection(false);\r\n        setIsUserSearchingForPlayerSaleCollection(false);\r\n            getUserNFTs(currentUser.addr);\r\n        }}>Search my football clips</Button>\r\n            <Button startIcon={<SearchIcon/>} style={{marginRight:\"25px\",marginTop:\"50px\",marginBottom:\"50px\"}} color=\"primary\" variant=\"contained\" onClick={async ()=>{const currentUser = await fcl.currentUser.snapshot();getUserPlayerNFTs(currentUser.addr);setIsUserSearchingForCollection(false);\r\n                setIsUserSearchingForSaleCollection(false);\r\n                setIsUserSearchingForPlayerCollection(true);\r\n                setIsUserSearchingForPlayerSaleCollection(false);\r\n                getUserPlayerNFTs();\r\n            }}>Search my players</Button>\r\n    <Button startIcon={<SearchIcon/>} style={{marginRight:\"25px\",marginTop:\"50px\",marginBottom:\"50px\"}} color=\"primary\" variant=\"contained\" onClick={async ()=>{const currentUser = await fcl.currentUser.snapshot();getUserSaleNFTs(currentUser.addr);\r\n        setIsUserSearchingForCollection(false);\r\n        setIsUserSearchingForSaleCollection(true);\r\n        setIsUserSearchingForPlayerCollection(false);\r\n        setIsUserSearchingForPlayerSaleCollection(false);\r\n    }}>Search my football clips for sale</Button>\r\n            <Button startIcon={<SearchIcon/>} style={{marginRight:\"25px\",marginTop:\"50px\",marginBottom:\"50px\"}} color=\"primary\" variant=\"contained\" onClick={async ()=>{const currentUser = await fcl.currentUser.snapshot();getUserSaleNFTs(currentUser.addr);\r\n                setIsUserSearchingForCollection(false);\r\n                setIsUserSearchingForSaleCollection(false);\r\n                setIsUserSearchingForPlayerCollection(false);\r\n                setIsUserSearchingForPlayerSaleCollection(true);\r\n                getUserPlayerSaleNFTs(currentUser.addr);\r\n            }}>Search my players for sale</Button>\r\n    {isUserSearchingForCollection?<div>\r\n        <div style={{position:\"center\",display:\"flex\", justifyContent:\"center\",flexWrap:\"wrap\",margin:\"auto\",padding:\"15px\", width:\"100%\"}}>\r\n            {(nfts.length!==0&&nfts)?nfts.map(nft => (\r\n                <div style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\",borderRadius:\"23px\"}} key={nft.id}>\r\n                    <h1 style={{color:\"white\",fontFamily:\"Helvetica\"}}>{nft.id}</h1>\r\n                    <h1 style={{color:\"white\",fontFamily:\"Helvetica\"}}>{nft.data.name}</h1>\r\n                    <video style={{margin:\"10px\"}} height=\"320\" autoPlay loop>\r\n                        <source src={`https://ipfs.infura.io/ipfs/${nft.data.ipfs}`} type='video/mp4'/>\r\n                    </video>\r\n                    <div style={{margin:\"15px\"}}>\r\n                        <TextField InputLabelProps={{\r\n                            style: { color: '#d7d7d7'},\r\n                        }} InputProps={{\r\n                            className: classes.textField\r\n                        }} style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" placeholder=\"156.0\" label=\"Price\" variant=\"filled\" onChange={(e)=>setPrice(e.target.value)}/>\r\n                    <Button style={{marginTop:\"6px\",background:\"#6262d9\"}} startIcon={<PlaylistAddIcon/>} color=\"primary\" onClick={()=>{listNFTForSale(nft.id)}} variant=\"contained\">List NFT for sale</Button>\r\n                    </div>\r\n                </div>\r\n            )):!isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1></div>:\r\n                <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>You do not have any football clip nfts yet</h1></div>}\r\n        </div>\r\n    </div>:\"\"}\r\n    {isUserSearchingForSaleCollection?\r\n        <div>\r\n            <div style={{position:\"center\",display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\",margin:\"auto\",padding:\"15px\", width:\"100%\",height:\"100%\"}}>\r\n                {(Object.keys(saleNfts).length!==0&&saleNfts)?Object.keys(saleNfts).map(nftID => (\r\n                    <div id=\"nftForSaleDescription\" style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\",borderRadius:\"23px\"}} key={nftID}>\r\n                        <h1 style={{fontFamily:\"Helvetica\"}}>{nftID}</h1>\r\n                        <h1 style={{fontFamily:\"Helvetica\"}}>{saleNfts[nftID].nftRef.data.name}</h1>\r\n                        <h1 style={{fontFamily:\"Helvetica\"}}>Price: {saleNfts[nftID].price}</h1>\r\n                        <video style={{margin:\"10px\"}} height=\"320\" autoPlay loop>\r\n                            <source src={`https://ipfs.infura.io/ipfs/${saleNfts[nftID].nftRef.data.ipfs}`} type='video/mp4'/>\r\n                        </video>\r\n                        <div>\r\n                        <Button startIcon={<RemovelistAddIcon/>} color=\"primary\" style={{margin:\"10px\",width:\"400px\"}}  onClick={async ()=>{await unListForSale(nftID);const currentUser = await fcl.currentUser.snapshot();getUserSaleNFTs(currentUser.addr);}} variant=\"contained\">Unlist NFT from sale</Button>\r\n                        </div>\r\n                    </div>\r\n                )):!isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1></div>:\r\n                    <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>You have not listed any football clip nfts</h1></div>}\r\n            </div>\r\n        </div>:\"\"}\r\n            {isUserSearchingForPlayerCollection?\r\n                <div>\r\n                <div style={{position:\"center\",display:\"flex\", justifyContent:\"center\",flexWrap:\"wrap\",margin:\"auto\",padding:\"15px\", width:\"100%\"}}>\r\n                    {(playerNFTs.length!==0&&playerNFTs)?playerNFTs.map(nft => (\r\n                        <div style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\",borderRadius:\"23px\"}} key={nft.id}>\r\n                            <h1 style={{color:\"white\",fontFamily:\"Helvetica\"}}>{nft.id}</h1>\r\n                            <h1 style={{color:\"white\",fontFamily:\"Helvetica\"}}>{nft.data.name}</h1>\r\n                            <img src={`https://ipfs.infura.io/ipfs/${nft.data.ipfs}`} style={{width:\"325px\",height:\"300px\"}}/>\r\n                            <div style={{margin:\"15px\"}}>\r\n                                <TextField InputLabelProps={{\r\n                                    style: { color: '#d7d7d7'},\r\n                                }} InputProps={{\r\n                                    className: classes.textField\r\n                                }} style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" placeholder=\"156.0\" label=\"Price\" variant=\"filled\" onChange={(e)=>setPrice(e.target.value)}/>\r\n                                <Button style={{marginTop:\"6px\"}} startIcon={<PlaylistAddIcon/>} color=\"primary\" onClick={()=>{listPlayerNFTForSale(nft.id)}} variant=\"contained\">List NFT for sale</Button>\r\n                            </div>\r\n                        </div>\r\n                    )):!isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1></div>:\r\n                        <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>You do not have any player nfts yet</h1></div>}\r\n                </div>\r\n                </div>\r\n                :\"\"}\r\n            {isUserSearchingForPlayerSaleCollection?\r\n                <div>\r\n                    <div style={{position:\"center\",display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\",margin:\"auto\",padding:\"15px\", width:\"100%\",height:\"100%\"}}>\r\n                        {(Object.keys(salePlayerNFTs).length!==0&&salePlayerNFTs)?Object.keys(salePlayerNFTs).map(nftID => (\r\n                            <div id=\"nftForSaleDescription\" style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\",borderRadius:\"23px\"}} key={nftID}>\r\n                                <h1 style={{fontFamily:\"Helvetica\"}}>{nftID}</h1>\r\n                                <h1 style={{fontFamily:\"Helvetica\"}}>{salePlayerNFTs[nftID].nftRef.data.name}</h1>\r\n                                <h1 style={{fontFamily:\"Helvetica\"}}>Price: {salePlayerNFTs[nftID].price}</h1>\r\n                                <img src={`https://ipfs.infura.io/ipfs/${salePlayerNFTs[nftID].nftRef.data.ipfs}`} style={{width:\"325px\",height:\"300px\"}}/>\r\n                                <div>\r\n                                    <Button startIcon={<RemovelistAddIcon/>} color=\"primary\" style={{margin:\"10px\",width:\"400px\"}}  onClick={()=>{unListPlayerNftFromSale(nftID)}} variant=\"contained\">Unlist NFT from sale</Button>\r\n                                </div>\r\n                            </div>\r\n                        )):!isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1></div>:\r\n                            <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>You have not listed any player nfts</h1></div>}\r\n                    </div>\r\n                </div>:\"\"}\r\n        </div>\r\n            <Footer/>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MyCollectionsScene;","import Button from \"@material-ui/core/Button\";\r\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {PackContext} from \"../../App\";\r\nimport Footer from \"../Footer\";\r\nimport ModalForSetUp from \"../ModalForSetUp\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport ModalForSelectingFC from \"../ModalForSelectingFC\";\r\nimport \"../packs.css\"\r\n\r\n\r\nfunction PackScene(props) {\r\n\r\n    const {chooseFavouriteFootballClub,isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC,setUpUser,isModalWindowOpened,setIsModalWindowOpened,isSetUpMade,openPack,templates,\r\n        families,getFootballClipTemplates,listFamilies,listChallenges}=useContext(PackContext);\r\n\r\n    useEffect( async ()=>{\r\n        console.log(\"hi\");\r\n        await getFootballClipTemplates()\r\n        console.log(\"hi\")\r\n        listFamilies();\r\n        listChallenges();\r\n    },[])\r\n\r\n    const handleClose=()=>{\r\n        setIsModalWindowOpened(false);\r\n    }\r\n\r\n    const handleCloseOfModalWindowToSelectFC=()=>{\r\n        setIsModalWindowOpenedToSelectFC(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"background-packs\" style={{marginTop:\"50px\"}}>\r\n                <h1 style={{fontFamily:\"Helvetica\",marginTop:\"35px\",color:\"#00008B\"}}>Available pack launches</h1>\r\n                <div style={{display:\"flex\",justifyContent:\"center\",flexDirection: \"column\"}}>\r\n                    {families.map(family => (\r\n                        <div style={{borderRadius:\"23px\",position:\"center\",margin:\"auto\",border:\"2px solid black\",padding:\"15px\",background:\"linear-gradient(to bottom right, blue, pink)\", width:\"75%\",marginTop:\"10px\",marginBottom:\"15px\"}} key={family.id}>\r\n                            <h1 style={{fontFamily:\"Helvetica\",color:\"white\"}}>Pack name: {family.name}</h1>\r\n                            <h1 style={{fontFamily:\"Helvetica\",color:\"white\"}}>Pack price: {family.price} flows</h1>\r\n                            <h1 style={{fontFamily:\"Helvetica\",color:\"white\"}}>In the pack there are the following football clips: </h1>\r\n                            <div style={{display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\"}}>\r\n                                {family.templates.map(template=>(\r\n                                    <div style={{border:\"2px solid black\",margin:\"10px\",background:\"#5c5ccf\",borderRadius:\"23px\"}}>\r\n                                        <h1 style={{fontFamily:\"Helvetica\",color:\"white\"}}>{templates[template].name}</h1>\r\n                                        <video style={{margin:\"10px\"}} height=\"320\" autoPlay loop>\r\n                                            <source src={`https://ipfs.infura.io/ipfs/${templates[template].ipfs}`} type='video/mp4'/>\r\n                                        </video>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <Button startIcon={<LockOpenIcon/>} color=\"primary\" style={{margin:\"10px\",width:\"400px\",background:\"#6262d9\"}}  onClick={()=>{if(isSetUpMade){openPack(family.familyID)} else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Open pack</Button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            <Modal\r\n                open={isModalWindowOpenedToSelectFC}\r\n                onClose={handleCloseOfModalWindowToSelectFC}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <ModalForSelectingFC setIsModalWindowOpened={setIsModalWindowOpened} setIsModalWindowOpenedToSelectFC={setIsModalWindowOpenedToSelectFC} chooseFavouriteFootballClub={chooseFavouriteFootballClub}/>\r\n            </Modal>\r\n            <Modal\r\n                open={isModalWindowOpened}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <ModalForSetUp setIsModalWindowOpened={setIsModalWindowOpened} setUpUser={setUpUser}/>\r\n            </Modal>\r\n            {/*{isModalWindowOpened&&<ModalForSetUp setIsModalWindowOpened={setIsModalWindowOpened}/>}*/}\r\n        <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PackScene;","import React, {useContext} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {AdminContext} from \"../App\";\r\n\r\n\r\nfunction TemplateCreation(props) {\r\n\r\n    const{setIsModalWindowOpenedToSelectFC,makePlayerTemplate,setIsModalWindowOpened,isSetUpMade,setFile,setName,setRarity,makeFootballClipTemplate}=useContext(AdminContext);\r\n\r\n    return (\r\n        <div>\r\n        <div style={{margin:\"15px\"}} className=\"TemplateCreation\">\r\n            <TextField autoComplete=\"off\" style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"Name of nft\" variant=\"filled\" onChange={(e)=>setName(e.target.value)}/>\r\n            <TextField style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"Rarity\" placeholder=\"General/Rare/UltraRare\" variant=\"filled\" onChange={(e)=>setRarity(e.target.value)}/>\r\n            <label htmlFor=\"upload-photo\">\r\n                <input\r\n                    onChange={(e)=>setFile(e.target.files[0])}\r\n                    style={{ display: 'none' }}\r\n                    id=\"upload-photo\"\r\n                    name=\"upload-photo\"\r\n                    type=\"file\"\r\n                />\r\n                <Fab\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    component=\"span\"\r\n                    aria-label=\"add\"\r\n                    variant=\"extended\"\r\n                >\r\n                    <AddIcon /> Upload video\r\n                </Fab>\r\n            </label>\r\n            <Button startIcon={<CreateIcon/>} color=\"primary\" style={{marginLeft:\"10px\"}}  onClick={()=>{if(isSetUpMade){makeFootballClipTemplate()}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Create a football clip template</Button>\r\n        </div>\r\n    <div style={{margin:\"15px\"}} className=\"TemplateCreation\">\r\n        <TextField autoComplete=\"off\" style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"Name of nft\" variant=\"filled\" onChange={(e)=>setName(e.target.value)}/>\r\n        <TextField style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"Rarity\" placeholder=\"General/Rare/UltraRare\" variant=\"filled\" onChange={(e)=>setRarity(e.target.value)}/>\r\n        <label htmlFor=\"upload-photo\">\r\n            <input\r\n                onChange={(e)=>setFile(e.target.files[0])}\r\n                style={{ display: 'none' }}\r\n                id=\"upload-photo\"\r\n                name=\"upload-photo\"\r\n                type=\"file\"\r\n            />\r\n            <Fab\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                component=\"span\"\r\n                aria-label=\"add\"\r\n                variant=\"extended\"\r\n            >\r\n                <AddIcon /> Upload image\r\n            </Fab>\r\n        </label>\r\n        <Button startIcon={<CreateIcon/>} color=\"primary\" style={{marginLeft:\"10px\"}}  onClick={()=>{if(isSetUpMade){makePlayerTemplate()}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Create a player template</Button>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TemplateCreation;","import React, {useContext} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {AdminContext} from \"../App\";\r\n\r\n\r\nfunction PackCollectionCreation(props) {\r\n    const{setIsModalWindowOpenedToSelectFC,isSetUpMade,setIsModalWindowOpened,setNameOfPackLaunch,setPrice,createFamily}=useContext(AdminContext);\r\n\r\n    return (\r\n        <div style={{margin:\"10px\"}} className=\"PackCollectionCreation\">\r\n            <TextField style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"Name of pack collection\" variant=\"filled\" onChange={(e)=>setNameOfPackLaunch(e.target.value)}/>\r\n            <TextField style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" placeholder=\"123.0\" label=\"Price\" variant=\"filled\" onChange={(e)=>setPrice(e.target.value)}/>\r\n            <Button startIcon={<CreateIcon/>} color=\"primary\" style={{marginLeft:\"10px\"}}  onClick={()=>{if(isSetUpMade){createFamily()}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Create a pack launch</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PackCollectionCreation;","import React, {useContext} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {AdminContext} from \"../App\";\r\n\r\n\r\nfunction FootballClipToPackAddition(props) {\r\n    const{setIsModalWindowOpenedToSelectFC,isSetUpMade,setIsModalWindowOpened,setPackLaunchID,addFootballClipToPackCollection,setTemplateID}=useContext(AdminContext);\r\n    return (\r\n        <div style={{margin:\"15px\"}} className=\"FootballClipToPackAddition\">\r\n            <TextField style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"PackCollectionID\" variant=\"filled\" onChange={(e)=>setPackLaunchID(e.target.value)}/>\r\n            <TextField style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"FootballClipID\" variant=\"filled\"  onChange={(e)=>setTemplateID(e.target.value)}/>\r\n            <Button startIcon={<AddIcon/>} color=\"primary\" style={{marginLeft:\"10px\"}}  onClick={()=>{if(isSetUpMade){addFootballClipToPackCollection()}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Add a football clip to pack collection</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FootballClipToPackAddition;","import TemplateCreation from \"../TemplateCreation\";\r\nimport React, {useContext, useEffect} from \"react\";\r\nimport PackCollectionCreation from \"../PackCollectionCreation\";\r\nimport FootballClipToPackAddition from \"../FootballClipToPackAddition\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {AdminContext} from \"../../App\";\r\nimport * as fcl from \"@onflow/fcl\";\r\nimport Footer from \"../Footer\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport ModalForSetUp from \"../ModalForSetUp\";\r\nimport ModalForSelectingFC from \"../ModalForSelectingFC\";\r\n\r\nfunction AdminScene(props) {\r\n\r\n    const{setFamilyID,removePack,chooseFavouriteFootballClub,isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC,createSpecialChallenge,setFavouriteTeam,favouriteTeam,isSetUpMade,isModalWindowOpened,setIsModalWindowOpened,setUpUser,setTask,setReward,createChallenge,task,reward,removeTemplate,setTemplateID}=useContext(AdminContext);\r\n\r\n    const handleClose=()=>{\r\n        setIsModalWindowOpened(false);\r\n    }\r\n\r\n    const handleCloseOfModalWindowToSelectFC=()=>{\r\n        setIsModalWindowOpenedToSelectFC(false);\r\n    }\r\n\r\n    return (\r\n        <div style={{height:\"100%\"}}>\r\n        <div style={{marginTop:\"100px\",height:\"80%\"}}>\r\n            <TemplateCreation/>\r\n            <PackCollectionCreation/>\r\n            <FootballClipToPackAddition/>\r\n            <div style={{margin:\"15px\"}}>\r\n                <TextField style={{width:\"250px\",marginRight:\"10px\"}} size=\"small\" placeholder=\"1,2\" type=\"text\" label=\"IDs of NFTs user should collect\" variant=\"filled\" onChange={(e)=>{let input=e.target.value;setTask(Array.from(input.split(',')).map(i=>Number(i)))}}/>\r\n                <TextField style={{width:\"325px\",marginRight:\"10px\"}} size=\"small\" placeholder=\"3,5\" type=\"text\" label=\"IDs of NFTs user will receive as the reward\" variant=\"filled\" onChange={(e)=>{let input=e.target.value;setReward(Array.from(input.split(',')).map(i=>Number(i)))}}/>\r\n                <TextField style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"Football team\" variant=\"filled\" onChange={(e)=>setFavouriteTeam(e.target.value)}/>\r\n                <Button startIcon={<AddIcon/>} style={{marginLeft:\"10px\"}} color=\"primary\" onClick={()=>{if(isSetUpMade){createChallenge(task,reward)}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Add regular challenge</Button>\r\n            </div>\r\n            <div style={{margin:\"15px\"}}>\r\n                <TextField style={{width:\"250px\",marginRight:\"10px\"}} size=\"small\" placeholder=\"1,2\" type=\"text\" label=\"IDs of NFTs user should collect\" variant=\"filled\" onChange={(e)=>{let input=e.target.value;setTask(Array.from(input.split(',')).map(i=>Number(i)))}}/>\r\n                <TextField style={{width:\"325px\",marginRight:\"10px\"}} size=\"small\" placeholder=\"3,5\" type=\"text\" label=\"IDs of NFTs user will receive as the reward\" variant=\"filled\" onChange={(e)=>{let input=e.target.value;setReward(Array.from(input.split(',')).map(i=>Number(i)))}}/>\r\n                <TextField style={{marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"Football team\" variant=\"filled\" onChange={(e)=>setFavouriteTeam(e.target.value)}/>\r\n                <Button startIcon={<AddIcon/>} style={{marginLeft:\"10px\"}} color=\"primary\" onClick={()=>{if(isSetUpMade){createSpecialChallenge(task,reward)}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Add special challenge</Button>\r\n            </div>\r\n            <div style={{margin:\"15px\"}}>\r\n                <TextField style={{width:\"190px\",marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"TemplateID\" variant=\"filled\" onChange={(e)=>setTemplateID(e.target.value)}/>\r\n                <Button startIcon={<DeleteIcon/>} style={{marginRight:\"35px\",marginTop:\"5px\"}} color=\"secondary\" onClick={()=>{if(isSetUpMade){removeTemplate()}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Delete template</Button>\r\n                <TextField style={{width:\"190px\",marginRight:\"10px\"}} size=\"small\" type=\"text\" label=\"FamilyID\" variant=\"filled\" onChange={(e)=>setFamilyID(e.target.value)}/>\r\n                <Button startIcon={<DeleteIcon/>} style={{marginTop:\"5px\"}} color=\"secondary\" onClick={()=>{if(isSetUpMade){removePack()}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Delete pack</Button>\r\n            </div>\r\n        </div>\r\n            <Modal\r\n                open={isModalWindowOpenedToSelectFC}\r\n                onClose={handleCloseOfModalWindowToSelectFC}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <ModalForSelectingFC setIsModalWindowOpened={setIsModalWindowOpened} setIsModalWindowOpenedToSelectFC={setIsModalWindowOpenedToSelectFC} chooseFavouriteFootballClub={chooseFavouriteFootballClub}/>\r\n            </Modal>\r\n            <Modal\r\n                open={isModalWindowOpened}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <ModalForSetUp setIsModalWindowOpened={setIsModalWindowOpened} setUpUser={setUpUser}/>\r\n            </Modal>\r\n            <Footer style={{height:\"20%\"}}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminScene;","import Button from \"@material-ui/core/Button\";\r\nimport RemovelistAddIcon from \"@mui/icons-material/PlaylistRemove\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {MarketplaceContext} from \"../../App\";\r\nimport * as fcl from \"@onflow/fcl\";\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport Footer from \"../Footer\";\r\nimport ModalForSetUp from \"../ModalForSetUp\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ModalForSelectingFC from \"../ModalForSelectingFC\";\r\nimport \"../marketplace.css\"\r\n\r\nfunction MarketplaceScene(props) {\r\n\r\n    const{chooseFavouriteFootballClub,isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC,getUserPlayerNFTs,buyPlayer,unListPlayerNftFromSale,playerNFTs,getSellingPlayersOfUsers,setSellingPlayers,sellingPlayers,isUserSearchingForMarketplaceOfPlayers,isUserSearchingForMarketplaceOfFootballClips,setIsUserSearchingForMarketplaceOfFootballClips,setIsUserSearchingForMarketplaceOfPlayers,setIsUserLoggedIn,isUserLoggedIn,setUpUser,isModalWindowOpened,setIsModalWindowOpened,isSetUpMade,user,nfts,sellingNFTs,unListForSale,getSellingFootballClips,getUserNFTs,saleNfts,getUserSaleNFTs,buyNFT}=useContext(MarketplaceContext);\r\n    useEffect(async ()=>{\r\n        const isUserLoggedIn1=window.localStorage.getItem(\"isUserLoggedIn\");\r\n        setIsUserLoggedIn(JSON.parse(isUserLoggedIn1));\r\n        const currentUser = await fcl.currentUser.snapshot();\r\n       // checkIfUserLoggedIn();\r\n        await getUserNFTs();\r\n        await getSellingFootballClips();\r\n        await getUserSaleNFTs(currentUser.addr);\r\n        await getSellingPlayersOfUsers();\r\n        setIsUserSearchingForMarketplaceOfFootballClips(true);\r\n    },[])\r\n\r\n    useEffect( ()=>{\r\n        window.localStorage.setItem(\"isUserLoggedIn\",JSON.stringify(isUserLoggedIn));\r\n    })\r\n\r\n    // const checkIfUserLoggedIn=()=>{\r\n    //     if(user&&user.addr){\r\n    //         setIsUserLoggedIn(true);\r\n    //     } else{\r\n    //         setIsUserLoggedIn(false);\r\n    //     }\r\n    // }\r\n\r\n\r\n    const checkWhetherUserHasHisOwnNFTListed=(nftID)=>{\r\n        console.log(nftID);\r\n        let isOwnedByUser=false;\r\n        nfts.map(nft => {\r\n            if(nft.id==nftID){\r\n                isOwnedByUser=true;\r\n                console.log(\"Not yet\")\r\n            }\r\n        })\r\n        return isOwnedByUser;\r\n    }\r\n\r\n    const checkWhetherUserHasHisOwnPlayerListed=(nftID)=>{\r\n        console.log(nftID);\r\n        let isOwnedByUser=false;\r\n        playerNFTs.map(nft => {\r\n            if(nft.id==nftID){\r\n                isOwnedByUser=true;\r\n                console.log(\"Not yet\")\r\n            }\r\n        })\r\n        return isOwnedByUser;\r\n    }\r\n\r\n    const handleClose=()=>{\r\n        setIsModalWindowOpened(false);\r\n    }\r\n\r\n    const handleCloseOfModalWindowToSelectFC=()=>{\r\n        setIsModalWindowOpenedToSelectFC(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"background-marketplace\">\r\n            <div style={{marginTop:\"50px\"}}>\r\n                <Button startIcon={<SearchIcon/>} style={{marginRight:\"10px\",background:\"#4646b0\"}} color=\"primary\" variant=\"contained\" onClick={async ()=>{\r\n                    getSellingFootballClips();\r\n                    setIsUserSearchingForMarketplaceOfFootballClips(true);\r\n                    setIsUserSearchingForMarketplaceOfPlayers(false);\r\n                }}>Search football clips</Button>\r\n                <Button startIcon={<SearchIcon/>} style={{marginRight:\"10px\",background:\"#4646b0\"}} color=\"primary\" variant=\"contained\" onClick={async ()=>{\r\n                    getSellingPlayersOfUsers();\r\n                    setIsUserSearchingForMarketplaceOfFootballClips(false);\r\n                    setIsUserSearchingForMarketplaceOfPlayers(true);\r\n                }}>Search players</Button>\r\n                {isUserSearchingForMarketplaceOfFootballClips?\r\n            <div style={{position:\"center\",display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\",margin:\"auto\",padding:\"15px\", width:\"100%\", height:\"90%\"}}>\r\n                {(Object.keys(sellingNFTs).length!==0&&sellingNFTs)?Object.keys(sellingNFTs).map(nftID => (\r\n                    <div id=\"nftForSaleDescription\" style={{borderRadius:\"23px\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\"}} key={nftID}>\r\n                        <h1 style={{fontFamily:\"Helvetica\"}}>{nftID}</h1>\r\n                        <h1 style={{fontFamily:\"Helvetica\"}}>{sellingNFTs[nftID].name}</h1>\r\n                        <h1 style={{fontFamily:\"Helvetica\"}}>Price: {sellingNFTs[nftID].price}</h1>\r\n                        <video style={{margin:\"10px\"}} height=\"320\" autoPlay loop>\r\n                            <source src={`https://ipfs.infura.io/ipfs/${sellingNFTs[nftID].ipfs}`} type='video/mp4'/>\r\n                        </video>\r\n                        <div>\r\n                            {checkWhetherUserHasHisOwnNFTListed(nftID)?\r\n                            <Button startIcon={<RemovelistAddIcon/>} style={{margin:\"50px\",width:\"400px\",color:\"white\",background:\"#6262d9\"}}  onClick={async()=>{await unListForSale(nftID);await getSellingFootballClips()}} variant=\"outlined\">Unlist NFT from sale</Button>\r\n                             :<Button startIcon={<ShoppingCartIcon/>} color=\"primary\" style={{margin:\"50px\",width:\"400px\", background:\"#6262d9\"}}  onClick={async()=>{if(isSetUpMade){await buyNFT(nftID,sellingNFTs[nftID].owner);await getSellingFootballClips()}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Buy NFT</Button>}\r\n                        </div>\r\n                    </div>\r\n                )):!isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1></div>:\r\n                    <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>There are no football clips for sale yet</h1></div>}\r\n            </div>:\"\"}\r\n\r\n                {isUserSearchingForMarketplaceOfPlayers?\r\n                    <div style={{position:\"center\",display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\",margin:\"auto\",padding:\"15px\", width:\"100%\", height:\"90%\"}}>\r\n                        {(Object.keys(sellingPlayers).length!==0&&sellingPlayers)?Object.keys(sellingPlayers).map(nftID => (\r\n                            <div id=\"nftForSaleDescription\" style={{border:\"2px solid black\",margin:\"10px\",background:\"linear-gradient(to bottom right, blue, pink)\"}} key={nftID}>\r\n                                <h1 style={{fontFamily:\"Helvetica\"}}>{nftID}</h1>\r\n                                <h1 style={{fontFamily:\"Helvetica\"}}>{sellingPlayers[nftID].name}</h1>\r\n                                <h1 style={{fontFamily:\"Helvetica\"}}>Price: {sellingPlayers[nftID].price}</h1>\r\n                                <img src={`https://ipfs.infura.io/ipfs/${sellingPlayers[nftID].ipfs}`} style={{width:\"325px\",height:\"300px\"}}/>\r\n                                <div>\r\n                                    {checkWhetherUserHasHisOwnPlayerListed(nftID)?\r\n                                        <Button startIcon={<RemovelistAddIcon/>} color=\"primary\" style={{margin:\"50px\",width:\"400px\"}}  onClick={async ()=>{await unListPlayerNftFromSale(nftID); await getSellingPlayersOfUsers()}} variant=\"contained\">Unlist NFT from sale</Button>\r\n                                        :<Button startIcon={<ShoppingCartIcon/>} color=\"primary\" style={{margin:\"50px\",width:\"400px\"}}  onClick={async ()=>{if(isSetUpMade){await buyPlayer(nftID,sellingPlayers[nftID].owner);await getUserPlayerNFTs();await getSellingPlayersOfUsers()}else{setIsModalWindowOpenedToSelectFC(true)}}} variant=\"contained\">Buy NFT</Button>}\r\n                                </div>\r\n                            </div>\r\n                        )):!isUserLoggedIn?<div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1></div>:\r\n                            <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}><h1 style={{color:\"white\",margin:\"auto\"}}>There are no players for sale yet</h1></div>}\r\n                    </div>:\"\"}\r\n\r\n            </div>\r\n            <Modal\r\n                open={isModalWindowOpenedToSelectFC}\r\n                onClose={handleCloseOfModalWindowToSelectFC}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <ModalForSelectingFC setIsModalWindowOpened={setIsModalWindowOpened} setIsModalWindowOpenedToSelectFC={setIsModalWindowOpenedToSelectFC} chooseFavouriteFootballClub={chooseFavouriteFootballClub}/>\r\n            </Modal>\r\n            <Modal\r\n                open={isModalWindowOpened}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <ModalForSetUp setIsModalWindowOpened={setIsModalWindowOpened} setUpUser={setUpUser}/>\r\n            </Modal>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MarketplaceScene;","import React, {useContext, useEffect} from \"react\";\r\nimport {HomeContext} from \"../../App\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Footer from \"../Footer\";\r\nimport Spinner from \"../Spinner\";\r\nimport \"../myCollections.css\"\r\n\r\nfunction HomeScene(props) {\r\n\r\n    const {setIsUserLoggedIn,isUserLoggedIn,loading,setIsUserSearchingForCollection,\r\n        nfts}=useContext(HomeContext);\r\n\r\n\r\n    useEffect(async ()=>{\r\n        const isUserLoggedIn1=window.localStorage.getItem(\"isUserLoggedIn\");\r\n        setIsUserLoggedIn(JSON.parse(isUserLoggedIn1));\r\n        setIsUserSearchingForCollection(true);\r\n    },[])\r\n    useEffect( ()=>{\r\n        window.localStorage.setItem(\"isUserLoggedIn\",JSON.stringify(isUserLoggedIn));\r\n    })\r\n\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        textField: {\r\n            color:\"white\",\r\n            \"&::placeholder\": {\r\n                color: \"white\"\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (loading) return <Spinner />\r\n\r\n    return (\r\n        <div className=\"background-collections\">\r\n            <div style={{height:\"700px\",display:\"flex\",justifyContent:\"center\"}}>\r\n                {isUserLoggedIn?\r\n                    <h1 style={{color:\"white\",margin:\"auto\"}}>Home page:)</h1>\r\n                    :<h1 style={{color:\"white\",margin:\"auto\"}}>Please log in first:))</h1>\r\n                }\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeScene;","import './App.css';\nimport * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\";\nimport React, {useState, useEffect, useMemo} from 'react'\nimport {setUp} from \"./cadence/transctions/setUpUser\";\nimport {listFootballClipForSale} from \"./cadence/transctions/listFootballClipForSale\";\nimport {unlistFootballClipFromSale} from \"./cadence/transctions/unlistFootballClipFromSale\";\nimport {create} from 'ipfs-http-client'\nimport {getUserFootballClips} from \"./cadence/scripts/getUserFootballClips\";\nimport {getUserFootballClipsForSale} from \"./cadence/scripts/getUserFootballClipsForSale\";\nimport {purchaseFootballClip} from \"./cadence/transctions/purchaseFootballClip\";\nimport {createFootballClipTemplate} from \"./cadence/transctions/createFootballClipTemplate\";\nimport {getTemplatesOfFootballClips} from \"./cadence/scripts/getTemplatesOfFootballClips\";\nimport {deleteFootballClipTemplate} from \"./cadence/transctions/deleteFootballClipTemplate\";\nimport {makeFamily} from \"./cadence/transctions/createFamily\";\nimport {getFamilies} from \"./cadence/scripts/getFamilies\";\nimport {addTemplateToFamily} from \"./cadence/transctions/addTemplateToFamily\";\nimport {batchMintFootballClipsFromFamily} from \"./cadence/transctions/batchMintFootballClipsFromFamily\";\nimport TxDetails from \"./components/TxDetails\";\nimport {decode, getTransactionStatus, send, tx} from \"@onflow/fcl\";\nimport Spinner from \"./components/Spinner\";\nimport {addRegularChallenge} from \"./cadence/transctions/addRegularChallenge\";\nimport {removeChallenge} from \"./cadence/transctions/removeChallenge\";\nimport {getRegularCustomizedChallenges} from \"./cadence/scripts/getRegularCustomizedChallenges\";\nimport {mintReward} from \"./cadence/transctions/mintRewardForCompletingChallenge\";\nimport {getCompletedChallengesOfUser} from \"./cadence/scripts/getCompletedChallangesOfUser\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {BrowserRouter,Route,Routes} from \"react-router-dom\"\nimport Header from \"./components/Header\";\nimport ChallengeScene from \"./components/scenes/ChallengeScene\";\nimport MyCollectionsScene from \"./components/scenes/MyCollectionsScene\";\nimport PackScene from \"./components/scenes/PackScene\";\nimport AdminScene from \"./components/scenes/AdminScene\";\nimport {Navigate} from \"react-router\";\nimport MarketplaceScene from \"./components/scenes/MarketplaceScene\";\nimport {getSellingNFTs} from \"./cadence/scripts/getAllSellingFootballClips\";\nimport {getSellingPlayers} from \"./cadence/scripts/getAllSellingPlayers\";\nimport \"./styles/CollectionShow.css\"\nimport ModalForSetUp from \"./components/ModalForSetUp\";\nimport {createPlayerTemplate} from \"./cadence/transctions/createPlayerTemplate\";\nimport {getTemplatesOfPlayers} from \"./cadence/scripts/getTemplatesOfPlayers\";\nimport {getUserPlayersForSale} from \"./cadence/scripts/getUserPlayersForSale\";\nimport {getUserPlayers} from \"./cadence/scripts/getUserPlayers\";\nimport {listPlayerForSale} from \"./cadence/transctions/listPlayerForSale\";\nimport {unlistPlayerFromSale} from \"./cadence/transctions/unlistPlayerFromSale\";\nimport {purchasePlayer} from \"./cadence/transctions/purchasePlayer\";\nimport {addSpecialChallenge} from \"./cadence/transctions/addSpecialChallenge\";\nimport {getSpecialCustomizedChallenges} from \"./cadence/scripts/getSpecialCustomizedChallange\";\nimport {destroyFamily} from \"./cadence/transctions/destroyFamily\";\nimport HomeScene from \"./components/scenes/HomeScene\";\n\nconst client = create('https://ipfs.infura.io:5001/api/v0');\nfcl.config()\n    .put(\"accessNode.api\", \"https://access-testnet.onflow.org\")\n    .put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/testnet/authn\")\n\nexport const CollectionContext=React.createContext();\nexport const HeaderContext=React.createContext();\nexport const ChallengeContext=React.createContext();\nexport const MyCollectionsContext=React.createContext();\nexport const PackContext=React.createContext();\nexport const AdminContext=React.createContext();\nexport const MarketplaceContext=React.createContext();\nexport const HomeContext=React.createContext();\n\nfunction App(props) {\n    const[user,setUser]=useState();\n    const[nameOfNFT,setName]=useState('');\n    const[nameOfPackLaunch,setNameOfPackLaunch]=useState('');\n    const[rarity,setRarity]=useState('');\n    const[templateID,setTemplateID]=useState('');\n    const[packLaunchID,setPackLaunchID]=useState('');\n    const[file,setFile]=useState();\n    const[idOfNFT,setIdOfNFT]=useState();\n    const[price,setPrice]=useState();\n    const [nfts, setNFTs] = useState([]);\n    const [playerNFTs, setPlayerNFTs] = useState([]);\n    const [saleNfts, setSaleNFTs] = useState([]);\n    const [salePlayerNFTs, setSalePlayerNFTs] = useState([]);\n    const [templates,setTemplates]= useState([]);\n    const [playerTemplates,setPlayerTemplates]=useState([]);\n    const [families,setFamilies]= useState([]);\n    const [challenges,setChallenges]=useState([]);\n    const [specialChallenges,setSpecialChallenges]=useState([]);\n    const [sellingNFTs,setSellingNFTs]=useState([]);\n    const [sellingPlayers,setSellingPlayers]=useState([]);\n    const[completedChallenges,setCompletedChallenges]=useState([]);\n    const [searchableAddress,setSearchableAddress]=useState('');\n    const [task,setTask]=useState([]);\n    const [reward,setReward]=useState([]);\n    const [challengeId,setChallengeId]=useState();\n    const [isUserSearchingForCollection,setIsUserSearchingForCollection]=useState(false);\n    const [isUserSearchingForPlayerCollection,setIsUserSearchingForPlayerCollection]=useState(false);\n    const [isUserSearchingForSaleCollection,setIsUserSearchingForSaleCollection]=useState(false);\n    const [isUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerSaleCollection]=useState(false);\n    const [isUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForMarketplaceOfPlayers]=useState(false);\n    const [isUserSearchingForMarketplaceOfFootballClips,setIsUserSearchingForMarketplaceOfFootballClips]=useState(false);\n    const [isUserSearchingForRegularChallenges,setIsUserSearchingForRegularChallenges]=useState(false);\n    const [isUserSearchingForSpecialChallenge,setIsUserSearchingForSpecialChallenge]=useState(false);\n    let runningTxs=[];\n    const[isAdmin,setIsAdmin]=useState(false);\n    const[isSetUpMade,setSetUpMade]=useState(true);\n    const [isModalWindowOpened,setIsModalWindowOpened]=useState();\n    const [isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC]=useState();\n    const [isUserLoggedIn,setIsUserLoggedIn]=useState(false);\n    const [favouriteTeam,setFavouriteTeam]=useState(\"\");\n    const[familyID,setFamilyID]=useState();\n\n\n    const [txs, setTxs] = useState([])\n    const [loading, setLoading] = useState(true)\n    let userAddress=\"\";\n\n    const checkIfUserIsAdmin=async ()=>{\n        const currentUser = await fcl.currentUser.snapshot();\n        userAddress=currentUser.addr;\n        console.log(userAddress);\n        if(userAddress==0xc8af9ee840bc6aab){\n            setIsAdmin(true);\n            console.log(\"Hello\")\n            console.log(isAdmin); // this is for some reason is false always\n        } else {\n            setIsAdmin(false);\n            console.log(\"Hi\")\n        }\n        console.log(isAdmin);\n    }\n\n    const renderTxs = () => {\n        return (\n            <div className='txs__list'>\n                {txs.map(tx => <TxDetails id={tx?.id} key={tx?.id} />)}\n            </div>\n        )\n    }\n\n    const getLocalTxs = async () => {\n        const txString = window.localStorage.getItem('txs')\n\n        if (!txString || txString.length === 0) {\n            setLoading(false)\n            return\n        }\n\n        const localTxs = txString?.split(\",\")\n\n        for (let index = 0; index < localTxs.length; index++) {\n            const id = localTxs[index];\n            const t = await getTxStatus(id)\n            if (t?.status === 4) {\n                continue\n            }\n            tx(id).subscribe(s => updateTxStatus(s?.status, id))\n            runningTxs.push(id)\n        }\n\n        localStorage.setItem('txs', runningTxs.toString())\n        setTxs(runningTxs.map(t => ({ id: t })))\n    }\n\n    const addTx = (txID) => {\n        let transaction = { id: txID }\n        setTxs(prev => [...prev, transaction])\n        tx(txID).subscribe(s => updateTxStatus(s?.status, transaction?.id))\n        window.localStorage.setItem('txs', [...txs, transaction?.id].toString())\n    }\n\n    const updateTxStatus = (status, txID) => {\n        if (status === 4) {\n            removeTx(txID)\n            return\n        }\n        let tx = txs.find(t => t.id === txID)\n        let oldTxs = txs.filter(t => t.id !== txID)\n        if (!tx) return\n        let updatedTx = { ...tx, status }\n        setTxs([...oldTxs, updatedTx])\n    }\n\n    const removeTx = (txID) => {\n        let newTxs = txs.filter(t => t.id !== txID)\n        setTxs(newTxs)\n    }\n\n    const getTxStatus = async (txID) => {\n        const status = await send([\n            getTransactionStatus(txID),\n        ])\n            .then(decode);\n        return status\n    }\n\n    useEffect(async ()=>{\n\n        const currentUser = await fcl.currentUser.snapshot()\n        if(!currentUser.addr){\n            window.localStorage.setItem(\"isUserLoggedIn\",JSON.stringify(false));\n        } else{\n            window.localStorage.setItem(\"isUserLoggedIn\",JSON.stringify(true));\n        }\n        console.log(window.localStorage.getItem(\"isUserLoggedIn\"));\n        userAddress=currentUser.addr;\n        await getUserNFTs(currentUser.addr)\n        console.log(\"Player nfts\");\n        await getUserPlayerNFTs()\n        await listFamilies();\n        await getFootballClipTemplates();\n        await listChallenges();\n        console.log(\"Special challenges of user: \")\n        await listSpecialChallenges();\n        console.log(\"Player templates:\")\n        await getPlayerTemplates();\n        await listCompletedChallenges(currentUser.addr);\n        window.localStorage.removeItem('txs');\n        await getLocalTxs();\n        fcl.currentUser.subscribe(setUser);\n        console.log(\"Completed: \"+completedChallenges)\n        console.log(\"User nfts are \"+nfts)\n        await checkIfUserIsAdmin();\n        setIsModalWindowOpened(false);\n\n    },[])\n\n    const login=async ()=>{\n\n        await fcl.authenticate();\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            console.log(currentUser);\n            setUser(currentUser);\n            setIsUserLoggedIn(true);\n            window.localStorage.setItem(\"isUserLoggedIn\", JSON.stringify(true));\n            getUserNFTs(currentUser.addr);\n            getUserSaleNFTs(currentUser.addr);\n            getSellingFootballClips();\n            getUserPlayerNFTs();\n            getSellingPlayersOfUsers()\n            await getFootballClipTemplates();\n            listChallenges();\n            listSpecialChallenges();\n            listCompletedChallenges(currentUser.addr);\n        }\n        // userAddress=user.addr;\n        // console.log(\"Hello \"+userAddress);\n    }\n\n    const logout=async ()=>{\n        fcl.unauthenticate();\n        const currentUser = await fcl.currentUser.snapshot();\n        setIsAdmin(false);\n        window.localStorage.setItem(\"isUserLoggedIn\",JSON.stringify(false));\n        setNFTs([]);\n        setSaleNFTs([]);\n        setSellingNFTs([]);\n        setPlayerNFTs([]);\n        setSellingPlayers([]);\n        setSalePlayerNFTs([]);\n        setChallenges([]);\n        setIsUserLoggedIn(false);\n        setSpecialChallenges([]);\n        await getFootballClipTemplates();\n        listFamilies();\n        listChallenges();\n        listCompletedChallenges(currentUser.addr);\n    }\n\n    const buyNFT =async (id,owner)=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            console.log(idOfNFT);\n            console.log(searchableAddress)\n            const transactionId = await fcl.send([\n                fcl.transaction(purchaseFootballClip),\n                fcl.args([\n                    fcl.arg(owner, t.Address),\n                    fcl.arg(parseInt(id), t.UInt64)\n                ]),\n                fcl.payer(fcl.authz),\n                fcl.proposer(fcl.authz),\n                fcl.authorizations([fcl.authz]),\n                fcl.limit(999)\n            ]).then(fcl.decode);\n            addTx(transactionId);\n            console.log(transactionId);\n            return fcl.tx(transactionId).onceSealed();\n        } catch(e){\n\n        }\n    }\n\n    const chooseFavouriteFootballClub= (footballClub)=>{\n        setFavouriteTeam(footballClub);\n        console.log(footballClub);\n    }\n\n    const buyPlayer =async (id,owner)=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            const transactionId = await fcl.send([\n                fcl.transaction(purchasePlayer),\n                fcl.args([\n                    fcl.arg(owner, t.Address),\n                    fcl.arg(parseInt(id), t.UInt64)\n                ]),\n                fcl.payer(fcl.authz),\n                fcl.proposer(fcl.authz),\n                fcl.authorizations([fcl.authz]),\n                fcl.limit(999)\n            ]).then(fcl.decode);\n            addTx(transactionId);\n            console.log(transactionId);\n            return fcl.tx(transactionId).onceSealed();\n        } catch(e){\n\n        }\n    }\n\n    const createFamily=async ()=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            const transactionId = await fcl.send([\n                fcl.transaction(makeFamily),\n                fcl.args([\n                    fcl.arg(nameOfPackLaunch, t.String),\n                    fcl.arg(price, t.UFix64)\n                ]),\n                fcl.payer(fcl.authz),\n                fcl.proposer(fcl.authz),\n                fcl.authorizations([fcl.authz]),\n                fcl.limit(999)\n            ]).then(fcl.decode);\n            addTx(transactionId);\n            console.log(transactionId);\n            try {\n                await fcl.tx(transactionId).onceSealed();\n            } catch (e) {\n                console.log(\"Hey\");\n            }\n            return fcl.tx(transactionId).onceSealed();\n        }catch (e){\n            console.error(\"User rejected transaction\")\n        }\n    }\n\n    const addFootballClipToPackCollection=async ()=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            const transactionId = await fcl.send([\n                fcl.transaction(addTemplateToFamily),\n                fcl.args([\n                    fcl.arg(parseInt(packLaunchID), t.UInt32),\n                    fcl.arg(parseInt(templateID), t.UInt32)\n                ]),\n                fcl.payer(fcl.authz),\n                fcl.proposer(fcl.authz),\n                fcl.authorizations([fcl.authz]),\n                fcl.limit(999)\n            ]).then(fcl.decode);\n            addTx(transactionId);\n            console.log(transactionId);\n            return fcl.tx(transactionId).onceSealed();\n        } catch (e){\n\n        }\n    }\n\n\n    const listNFTForSale=async (id) =>{\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                await getLocalTxs();\n                if (runningTxs.length > 0) {\n                    alert(\"Transactions are still running. Please wait for them to finish first.\")\n                    return\n                }\n                const transactionId = await fcl.send([\n                    fcl.transaction(listFootballClipForSale),\n                    fcl.args([fcl.arg(parseInt(id), t.UInt64),\n                        fcl.arg(price, t.UFix64),\n                        fcl.arg(currentUser.addr,t.Address)\n                    ]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                addTx(transactionId);\n                console.log(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (e) {\n\n            }\n        }\n    }\n\n    const listPlayerNFTForSale=async (id) =>{\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                await getLocalTxs();\n                if (runningTxs.length > 0) {\n                    alert(\"Transactions are still running. Please wait for them to finish first.\")\n                    return\n                }\n                const transactionId = await fcl.send([\n                    fcl.transaction(listPlayerForSale),\n                    fcl.args([fcl.arg(parseInt(id), t.UInt64),\n                        fcl.arg(price, t.UFix64),\n                        fcl.arg(currentUser.addr,t.Address)\n                    ]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                addTx(transactionId);\n                console.log(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (e) {\n\n            }\n        }\n    }\n\n    const unListForSale = async (id) =>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            const transactionId = await fcl.send([\n                fcl.transaction(unlistFootballClipFromSale),\n                fcl.args([fcl.arg(parseInt(id), t.UInt64)\n                ]),\n                fcl.payer(fcl.authz),\n                fcl.proposer(fcl.authz),\n                fcl.authorizations([fcl.authz]),\n                fcl.limit(999)\n            ]).then(fcl.decode);\n            addTx(transactionId);\n            console.log(transactionId);\n            return fcl.tx(transactionId).onceSealed();\n        } catch (e) {\n\n        }\n    }\n\n    const removePack=async ()=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            const transactionId = await fcl.send([\n                fcl.transaction(destroyFamily),\n                fcl.args([fcl.arg(parseInt(familyID), t.UInt32)\n                ]),\n                fcl.payer(fcl.authz),\n                fcl.proposer(fcl.authz),\n                fcl.authorizations([fcl.authz]),\n                fcl.limit(999)\n            ]).then(fcl.decode);\n            addTx(transactionId);\n            console.log(transactionId);\n            return fcl.tx(transactionId).onceSealed();\n        } catch (e) {\n\n        }\n    }\n\n    const unListPlayerNftFromSale = async (id) =>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            const transactionId = await fcl.send([\n                fcl.transaction(unlistPlayerFromSale),\n                fcl.args([fcl.arg(parseInt(id), t.UInt64)\n                ]),\n                fcl.payer(fcl.authz),\n                fcl.proposer(fcl.authz),\n                fcl.authorizations([fcl.authz]),\n                fcl.limit(999)\n            ]).then(fcl.decode);\n            addTx(transactionId);\n            console.log(transactionId);\n            return fcl.tx(transactionId).onceSealed();\n        } catch (e) {\n\n        }\n    }\n\n    const setUpUser=async () =>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            const transactionId = await fcl.send([\n                fcl.transaction(setUp),\n                fcl.args([fcl.arg(favouriteTeam, t.String)]),\n                fcl.payer(fcl.authz),\n                fcl.proposer(fcl.authz),\n                fcl.authorizations([fcl.authz]),\n                fcl.limit(999)\n            ]).then(fcl.decode);\n            addTx(transactionId);\n            console.log(transactionId);\n            setSetUpMade(true);\n            await listChallenges();\n            return fcl.tx(transactionId).onceSealed();\n        } catch (e){\n\n        }\n    }\n\n    // const mint = async () => {\n    //     // if (runningTxs) {\n    //     //     alert(\"Transactions are still running. Please wait for them to finish first.\")\n    //     //     return\n    //     // }\n    //       try {\n    //           const added = await client.add(file);\n    //           const hash = added.path;\n    //\n    //           console.log(templateID);\n    //\n    //           const transactionId = await fcl.send([\n    //               fcl.transaction(mintNFT),\n    //               fcl.args([fcl.arg(parseInt(templateID), t.UInt32),\n    //                   fcl.arg(hash, t.String)\n    //               ]),\n    //               fcl.payer(fcl.authz),\n    //               fcl.proposer(fcl.authz),\n    //               fcl.authorizations([fcl.authz]),\n    //               fcl.limit(999)\n    //           ]).then(fcl.decode);\n    //           console.log(transactionId);\n    //         //  addTx(transactionId);\n    //           return fcl.tx(transactionId).onceSealed();\n    //       }catch(error) {\n    //           console.log('Error uploading file: ', error);\n    //       }\n    // }\n\n    const getUserNFTs = async () => {\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                const result = await fcl.send([\n                    fcl.script(getUserFootballClips),\n                    fcl.args([\n                        fcl.arg(currentUser.addr, t.Address)\n                    ])\n                ]).then(fcl.decode);\n\n                console.log(result);\n                setNFTs(result);\n                setSetUpMade(true);\n            } catch (error) {\n                console.log(\"Something went wrong...\" + error)\n                setNFTs([]);\n                setSetUpMade(false);\n            }\n        }\n    }\n\n    const getUserPlayerNFTs = async () => {\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                const result = await fcl.send([\n                    fcl.script(getUserPlayers),\n                    fcl.args([\n                        fcl.arg(currentUser.addr, t.Address)\n                    ])\n                ]).then(fcl.decode);\n\n                console.log(result);\n                setPlayerNFTs(result);\n                setSetUpMade(true);\n            } catch (error) {\n                console.log(\"Something went wrong...\" + error)\n                setPlayerNFTs([]);\n                setSetUpMade(false);\n            }\n        }\n    }\n\n    const getSellingFootballClips=async ()=>{\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                const result = await fcl.send([\n                    fcl.script(getSellingNFTs),\n                    fcl.args([\n                    ])\n                ]).then(fcl.decode);\n\n                console.log(result);\n                setSellingNFTs(result);\n            } catch (error) {\n                console.log(\"Something went wrong...\" + error)\n                setSellingNFTs([]);\n            }\n        }\n    }\n\n    const getSellingPlayersOfUsers=async ()=>{\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                const result = await fcl.send([\n                    fcl.script(getSellingPlayers),\n                    fcl.args([\n                    ])\n                ]).then(fcl.decode);\n\n                console.log(result);\n                setSellingPlayers(result);\n            } catch (error) {\n                console.log(\"Something went wrong...\" + error)\n                setSellingPlayers([]);\n            }\n        }\n    }\n\n    const getUserSaleNFTs = async (address) =>{\n        try{\n            const result = await fcl.send([\n                fcl.script(getUserFootballClipsForSale),\n                fcl.args([\n                    fcl.arg(address, t.Address)\n                ])\n            ]).then(fcl.decode);\n\n            console.log(result);\n            setSaleNFTs(result);\n        } catch (error) {\n            console.log(\"Something went wrong...\")\n            console.log(error);\n            setSaleNFTs([]);\n        }\n    }\n\n    const getUserPlayerSaleNFTs = async (address) =>{\n        try{\n            const result = await fcl.send([\n                fcl.script(getUserPlayersForSale),\n                fcl.args([\n                    fcl.arg(address, t.Address)\n                ])\n            ]).then(fcl.decode);\n\n            console.log(result);\n            setSalePlayerNFTs(result);\n        } catch (error) {\n            console.log(\"Something went wrong...\")\n            console.log(error);\n            setSalePlayerNFTs([]);\n        }\n    }\n\n    const makeFootballClipTemplate = async () => {\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            try {\n                const added = await client.add(file); //take too long to execute\n                const hash = added.path;\n                console.log(hash);\n                const transactionId = await fcl.send([\n                    fcl.transaction(createFootballClipTemplate),\n                    fcl.args([fcl.arg(rarity, t.String),\n                        fcl.arg(nameOfNFT, t.String),\n                        fcl.arg(hash, t.String)]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                console.log(transactionId);\n                addTx(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (error) {\n                console.log(\"Something went wrong...\"+error)\n            }\n        } catch (e){\n\n        }\n    }\n\n    const makePlayerTemplate = async () => {\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            try {\n                const added = await client.add(file); //take too long to execute\n                const hash = added.path;\n                console.log(hash);\n                const transactionId = await fcl.send([\n                    fcl.transaction(createPlayerTemplate),\n                    fcl.args([fcl.arg(rarity, t.String),\n                        fcl.arg(nameOfNFT, t.String),\n                        fcl.arg(hash, t.String)]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                console.log(transactionId);\n                addTx(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (error) {\n                console.log(\"Something went wrong...\"+error)\n            }\n        } catch (e){\n\n        }\n    }\n\n    const getFootballClipTemplates = async () =>{\n        try{\n            const result = await fcl.send([\n                fcl.script(getTemplatesOfFootballClips),\n                fcl.args([\n                ])\n            ]).then(fcl.decode);\n\n            console.log(result);\n            setTemplates(result);\n        } catch (error) {\n            console.log(\"Something went wrong...\"+error)\n            setTemplates([]);\n        }\n    }\n\n    const getPlayerTemplates = async () =>{\n        try{\n            const result = await fcl.send([\n                fcl.script(getTemplatesOfPlayers),\n                fcl.args([\n                ])\n            ]).then(fcl.decode);\n\n            console.log(result);\n            setPlayerTemplates(result);\n        } catch (error) {\n            console.log(\"Something went wrong...\"+error)\n            setPlayerTemplates({});\n        }\n    }\n\n    const listFamilies=async ()=>{\n        try {\n            const result = await fcl.send([\n                fcl.script(getFamilies),\n                fcl.args([\n                ])\n            ]).then(fcl.decode);\n\n            console.log(result);\n            setFamilies(result);\n        } catch (error){\n            console.log(\"Something went wrong...\"+error)\n            setFamilies([]);\n        }\n\n    }\n\n    const listCompletedChallenges=async (address)=>{\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                const result = await fcl.send([\n                    fcl.script(getCompletedChallengesOfUser),\n                    fcl.args([\n                        fcl.arg(address, t.Address)\n                    ])\n                ]).then(fcl.decode);\n\n                console.log(result);\n                setCompletedChallenges(result);\n            } catch (error) {\n                console.log(\"Something went wrong...\" + error)\n                setCompletedChallenges([]);\n            }\n        }\n    }\n\n    const removeTemplate=async () =>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                console.log(\"rfmikmferf\")\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            try {\n                const transactionId = await fcl.send([\n                    fcl.transaction(deleteFootballClipTemplate),\n                    fcl.args([fcl.arg(parseInt(templateID), t.UInt32)]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                console.log(transactionId);\n                addTx(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (error) {\n                console.log(\"Something went wrong...\")\n            }\n        }catch (e){\n\n        }\n\n    }\n\n    let footballClipsToMint=[];\n    const chooseRandomFootballClipsFromPack=(packID)=>{\n        families.map((family)=>{\n            if(family.familyID==packID){\n                for(let index=0;index<family.templates.length;index++){\n                    if(index>0) break;\n                    const randomNumber=Math.floor(Math.random()*family.templates.length);\n                    footballClipsToMint.push(family.templates[randomNumber]);\n                }\n            }\n        })\n    }\n\n    const openPack=async (packID)=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            chooseRandomFootballClipsFromPack(packID);\n            console.log(footballClipsToMint);\n            try {\n                const transactionId = await fcl.send([\n                    fcl.transaction(batchMintFootballClipsFromFamily),\n                    fcl.args([fcl.arg(parseInt(packID), t.UInt32),\n                        fcl.arg(footballClipsToMint, t.Array(t.UInt32))\n                    ]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                console.log(transactionId);\n                console.log(\"SetUpMade \"+isSetUpMade);\n                addTx(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (error) {\n                console.log(\"Something went wrong...\"+error);\n                console.log(\"OpenPack error\")\n            }\n            footballClipsToMint = [];\n        } catch (e){\n\n        }\n    }\n\n    const createChallenge=async ()=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            try {\n                console.log(task);\n                console.log(reward);\n                const transactionId = await fcl.send([\n                    fcl.transaction(addRegularChallenge),\n                    fcl.args([fcl.arg(task, t.Array(t.UInt32)),\n                        fcl.arg(reward, t.Array(t.UInt32)),\n                        fcl.arg(favouriteTeam,t.String)\n                    ]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                console.log(transactionId);\n                addTx(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (error) {\n                console.log(\"Something went wrong...\")\n            }\n        } catch (e){\n\n        }\n    }\n\n    const createSpecialChallenge=async ()=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            try {\n                console.log(task);\n                console.log(reward);\n                const transactionId = await fcl.send([\n                    fcl.transaction(addSpecialChallenge),\n                    fcl.args([fcl.arg(task, t.Array(t.UInt32)),\n                        fcl.arg(reward, t.Array(t.UInt32)),\n                        fcl.arg(favouriteTeam,t.String)\n                    ]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                console.log(transactionId);\n                addTx(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (error) {\n                console.log(\"Something went wrong...\")\n            }\n        } catch (e){\n\n        }\n    }\n\n    const deleteChallenge=async ()=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            try {\n                const transactionId = await fcl.send([\n                    fcl.transaction(removeChallenge),\n                    fcl.args([fcl.arg(challengeId, t.UInt32)\n                    ]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                console.log(transactionId);\n                addTx(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (error) {\n                console.log(\"Something went wrong...\")\n            }\n        } catch (e){\n\n        }\n    }\n\n    const listChallenges=async()=>{\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                const result = await fcl.send([\n                    fcl.script(getRegularCustomizedChallenges),\n                    fcl.args([\n                        fcl.arg(currentUser.addr, t.Address)\n                    ])\n                ]).then(fcl.decode);\n\n                console.log(result);\n                setChallenges(result);\n                console.log(challenges);\n            } catch (error) {\n                console.log(\"Something went wrong...\" + error)\n                setChallenges([]);\n            }\n        }\n    }\n\n    const listSpecialChallenges=async()=>{\n        const currentUser = await fcl.currentUser.snapshot();\n        if(currentUser.addr) {\n            try {\n                const result = await fcl.send([\n                    fcl.script(getSpecialCustomizedChallenges),\n                    fcl.args([\n                        fcl.arg(currentUser.addr, t.Address)\n                    ])\n                ]).then(fcl.decode);\n\n                console.log(result);\n                setSpecialChallenges(result);\n            } catch (error) {\n                console.log(\"Something went wrong...\" + error)\n                setSpecialChallenges([]);\n            }\n        }\n    }\n\n    const mintRewardForCompletingChallenge=async (challengeID)=>{\n        try {\n            await getLocalTxs();\n            if (runningTxs.length > 0) {\n                alert(\"Transactions are still running. Please wait for them to finish first.\")\n                return\n            }\n            try {\n                console.log(challengeID);\n                const transactionId = await fcl.send([\n                    fcl.transaction(mintReward),\n                    fcl.args([fcl.arg(parseInt(challengeID), t.UInt32)\n                    ]),\n                    fcl.payer(fcl.authz),\n                    fcl.proposer(fcl.authz),\n                    fcl.authorizations([fcl.authz]),\n                    fcl.limit(999)\n                ]).then(fcl.decode);\n                console.log(transactionId);\n                addTx(transactionId);\n                return fcl.tx(transactionId).onceSealed();\n            } catch (error) {\n                console.log(\"Something went wrong...\"+error)\n            }\n        } catch (e){\n\n        }\n    }\n\n    const ProtectedRoute = ({\n                                isAdmin,\n                                redirectPath = '/',\n                                children,\n                            }) => {\n        if (!isAdmin) {\n            return <Navigate to={redirectPath} replace />;\n        }\n\n        return (\n            <div>\n\n                <TextField onChange={(e)=>{setRarity(e.target.value)}}/>\n                {/*<HeaderContext.Provider value={{user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getTemplates,*/}\n                {/*    listChallenges,*/}\n                {/*    listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>*/}\n                {/*    <Header/>*/}\n                {/*</HeaderContext.Provider>*/}\n                {/*<AdminContext.Provider value={{setTask,setReward,createChallenge,task,reward,removeTemplate,setFile,setName,setRarity,makeTemplate,*/}\n                {/*    setNameOfPackLaunch,setPrice,createFamily,setPackLaunchID,addFootballClipToPackCollection,setTemplateID}}>*/}\n                {/*    <AdminScene/>*/}\n                {/*</AdminContext.Provider>*/}\n            </div>\n        )\n    };\n\n    if (loading) return <Spinner />\n    return (\n        // <Providers>\n        <div style={{height:\"100%\"}}>\n            <div className=\"App\" style={{height:\"100%\",backgroundColor: \"transparent\"}}>\n                {renderTxs()}\n                <BrowserRouter>\n                    <Routes>\n                        <Route path=\"/\" element={\n                            <div>\n                                <HeaderContext.Provider value={{setIsUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForSpecialChallenge,getPlayerTemplates,setIsUserSearchingForRegularChallenges,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,setIsUserLoggedIn,getUserSaleNFTs,isUserLoggedIn,getSellingFootballClips,setIsUserSearchingForSaleCollection,logout,user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getFootballClipTemplates,\n                                    listChallenges,setIsUserSearchingForCollection,\n                                    listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>\n                                    <Header/>\n                                </HeaderContext.Provider>\n                                <HomeContext.Provider value={{listPlayerNFTForSale,unListPlayerNftFromSale,isUserSearchingForPlayerCollection,isUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,getUserPlayerNFTs,getUserPlayerSaleNFTs,playerNFTs,salePlayerNFTs,setPlayerNFTs,setSalePlayerNFTs,setIsUserLoggedIn,isUserLoggedIn,loading,setLoading,setIdOfNFT,setPrice,setIsUserSearchingForCollection,setIsUserSearchingForSaleCollection,\n                                    getUserNFTs,getUserSaleNFTs,isUserSearchingForCollection,\n                                    isUserSearchingForSaleCollection,nfts,saleNfts,listNFTForSale,unListForSale}}>\n                                    <HomeScene/>\n                                </HomeContext.Provider>\n                            </div>\n                        }/>\n                        <Route path=\"/home\" element={\n                            <div>\n                                <HeaderContext.Provider value={{setIsUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForSpecialChallenge,getPlayerTemplates,setIsUserSearchingForRegularChallenges,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,setIsUserLoggedIn,getUserSaleNFTs,isUserLoggedIn,getSellingFootballClips,setIsUserSearchingForSaleCollection,logout,user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getFootballClipTemplates,\n                                    listChallenges,setIsUserSearchingForCollection,\n                                    listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>\n                                    <Header/>\n                                </HeaderContext.Provider>\n                                <HomeContext.Provider value={{listPlayerNFTForSale,unListPlayerNftFromSale,isUserSearchingForPlayerCollection,isUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,getUserPlayerNFTs,getUserPlayerSaleNFTs,playerNFTs,salePlayerNFTs,setPlayerNFTs,setSalePlayerNFTs,setIsUserLoggedIn,isUserLoggedIn,loading,setLoading,setIdOfNFT,setPrice,setIsUserSearchingForCollection,setIsUserSearchingForSaleCollection,\n                                    getUserNFTs,getUserSaleNFTs,isUserSearchingForCollection,\n                                    isUserSearchingForSaleCollection,nfts,saleNfts,listNFTForSale,unListForSale}}>\n                                    <HomeScene/>\n                                </HomeContext.Provider>\n                            </div>\n                        }/>\n                        <Route path=\"/userCollections\"  element={\n                            <div>\n                                <HeaderContext.Provider value={{setIsUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForSpecialChallenge,getPlayerTemplates,setIsUserSearchingForRegularChallenges,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,setIsUserLoggedIn,getUserSaleNFTs,isUserLoggedIn,getSellingFootballClips,setIsUserSearchingForSaleCollection,logout,user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getFootballClipTemplates,\n                                    listChallenges,setIsUserSearchingForCollection,\n                                    listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>\n                                    <Header/>\n                                </HeaderContext.Provider>\n                                <MyCollectionsContext.Provider value={{listPlayerNFTForSale,unListPlayerNftFromSale,isUserSearchingForPlayerCollection,isUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,getUserPlayerNFTs,getUserPlayerSaleNFTs,playerNFTs,salePlayerNFTs,setPlayerNFTs,setSalePlayerNFTs,setIsUserLoggedIn,isUserLoggedIn,loading,setLoading,setIdOfNFT,setPrice,setIsUserSearchingForCollection,setIsUserSearchingForSaleCollection,\n                                    getUserNFTs,getUserSaleNFTs,isUserSearchingForCollection,\n                                    isUserSearchingForSaleCollection,nfts,saleNfts,listNFTForSale,unListForSale}}>\n                                    <MyCollectionsScene style={{marginTop:\"100px\"}}/>\n                                </MyCollectionsContext.Provider>\n                            </div>\n                        }/>\n                        <Route path=\"/packs\" element={\n                            <div>\n                                <HeaderContext.Provider value={{setIsUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForSpecialChallenge,getPlayerTemplates,setIsUserSearchingForRegularChallenges,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,setIsUserLoggedIn,isUserLoggedIn,getUserSaleNFTs,getSellingFootballClips,logout,setIsUserSearchingForSaleCollection,setIsUserSearchingForCollection,user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getFootballClipTemplates,\n                                    listChallenges,\n                                    listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>\n                                    <Header/>\n                                </HeaderContext.Provider>\n                                <PackContext.Provider value={{chooseFavouriteFootballClub,isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC,setUpUser,isModalWindowOpened,setIsModalWindowOpened,isSetUpMade,openPack,templates,\n                                    families,getFootballClipTemplates,listFamilies,getUserNFTs,listChallenges,listCompletedChallenges}}>\n                                    <PackScene/>\n                                </PackContext.Provider>\n                            </div>\n                        }/>\n                        <Route path=\"/challenges\" element={\n                            <div>\n                                <HeaderContext.Provider value={{setIsUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForSpecialChallenge,getPlayerTemplates,setIsUserSearchingForRegularChallenges,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,setIsUserLoggedIn,isUserLoggedIn,getUserSaleNFTs,getSellingFootballClips,logout,setIsUserSearchingForSaleCollection,setIsUserSearchingForCollection,user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getFootballClipTemplates,\n                                    listChallenges,\n                                    listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>\n                                    <Header/>\n                                </HeaderContext.Provider>\n                                <ChallengeContext.Provider value={{getUserPlayerNFTs,playerNFTs,isModalWindowOpened,setIsModalWindowOpened,chooseFavouriteFootballClub,isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC,specialChallenges,setSpecialChallenges,listSpecialChallenges,isSetUpMade,setIsUserSearchingForRegularChallenges,setIsUserSearchingForSpecialChallenge,isUserSearchingForSpecialChallenge,isUserSearchingForRegularChallenges,setIsUserLoggedIn,isUserLoggedIn,setUpUser,setLoading,loading,getPlayerTemplates,getFootballClipTemplates,listCompletedChallenges,completedChallenges,user,\n                                    mintRewardForCompletingChallenge,listChallenges,getUserNFTs,\n                                    nfts,templates, challenges,playerTemplates}}>\n                                    <ChallengeScene/>\n                                </ChallengeContext.Provider>\n                            </div>\n                        }/>\n\n                        <Route path=\"/marketplace\" element={\n\n                            <div>\n                                <HeaderContext.Provider value={{setIsUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForSpecialChallenge,getPlayerTemplates,setIsUserSearchingForRegularChallenges,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,setIsUserLoggedIn,isUserLoggedIn,getUserSaleNFTs,getSellingFootballClips,logout,setIsUserSearchingForSaleCollection,setIsUserSearchingForCollection,user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getFootballClipTemplates,\n                                    listChallenges,\n                                    listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>\n                                    <Header/>\n                                </HeaderContext.Provider>\n                                <MarketplaceContext.Provider value={{chooseFavouriteFootballClub,isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC,listChallenges,getUserPlayerNFTs,buyPlayer,unListPlayerNftFromSale,playerNFTs,getSellingPlayersOfUsers,setSellingPlayers,sellingPlayers,isUserSearchingForMarketplaceOfPlayers,isUserSearchingForMarketplaceOfFootballClips,setIsUserSearchingForMarketplaceOfFootballClips,setIsUserSearchingForMarketplaceOfPlayers,setIsUserLoggedIn,isUserLoggedIn,setUpUser,isModalWindowOpened,setIsModalWindowOpened,isSetUpMade,user,nfts,sellingNFTs,buyNFT,unListForSale,getUserNFTs,getSellingFootballClips,saleNfts,getUserSaleNFTs}}>\n                                    <MarketplaceScene/>\n                                </MarketplaceContext.Provider>\n                            </div>\n                        }/>\n\n                        {/*<Route element={<ProtectedRoute isAdmin={isAdmin}/>}>*/}\n                        {isAdmin&&(<Route path=\"/admin\" element={\n                            <div style={{height:\"100%\"}}>\n                                <HeaderContext.Provider value={{setIsUserSearchingForMarketplaceOfPlayers,setIsUserSearchingForSpecialChallenge,getPlayerTemplates,setIsUserSearchingForRegularChallenges,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,setIsUserLoggedIn,isUserLoggedIn,getUserSaleNFTs,getSellingFootballClips,logout,setIsUserSearchingForSaleCollection,setIsUserSearchingForCollection,user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getFootballClipTemplates,\n                                    listChallenges,\n                                    listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>\n                                    <Header/>\n                                </HeaderContext.Provider>\n                                <AdminContext.Provider value={{setFamilyID,removePack,chooseFavouriteFootballClub,isModalWindowOpenedToSelectFC,setIsModalWindowOpenedToSelectFC,createSpecialChallenge,setFavouriteTeam,favouriteTeam,isSetUpMade,isModalWindowOpened,setIsModalWindowOpened,setUpUser,setTask,setReward,createChallenge,task,reward,removeTemplate,setFile,setName,setRarity,makePlayerTemplate,makeFootballClipTemplate,\n                                    setNameOfPackLaunch,setPrice,createFamily,setPackLaunchID,addFootballClipToPackCollection,setTemplateID}}>\n                                    <AdminScene/>\n                                </AdminContext.Provider>\n                            </div>\n                        }/>)}\n\n                        {/*</Route>*/}\n                        <Route\n                            path=\"*\"\n                            element={\n                                <div>\n                                    <HeaderContext.Provider value={{setIsUserSearchingForMarketplaceOfPlayers,getPlayerTemplates,setIsUserSearchingForSpecialChallenge,setIsUserSearchingForRegularChallenges,setIsUserSearchingForPlayerSaleCollection,setIsUserSearchingForPlayerCollection,setIsUserSearchingForMarketplaceOfFootballClips,getSellingPlayersOfUsers,setIsUserLoggedIn,isUserLoggedIn,getUserSaleNFTs,getSellingFootballClips,logout,setIsUserSearchingForSaleCollection,setIsUserSearchingForCollection,user,isAdmin,setIsAdmin,login,setUpUser,getUserNFTs, getFootballClipTemplates,\n                                        listChallenges,\n                                        listCompletedChallenges,listFamilies,checkIfUserIsAdmin}}>\n                                        <Header/>\n                                    </HeaderContext.Provider>\n                                </div>}\n                        />\n                    </Routes>\n                </BrowserRouter>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","export const purchaseFootballClip =\r\n\r\n    `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\n\r\ntransaction(account:Address,id:UInt64) {\r\n\r\n    \r\nprepare(acct: AuthAccount) { //acct - account that calls the transaction\r\n   \r\n\r\n        let saleCollection = getAccount(account).getCapability(/public/MySaleCollection)\r\n     .borrow<&Marketplace.SaleCollection{Marketplace.SaleCollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n        let recepientCollection = getAccount(acct.address).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")  \r\n\r\n        let price=saleCollection.getPriceOfFootballClip(id:id);\r\n        let payment <- acct.borrow<&FlowToken.Vault>(from:/storage/flowTokenVault)!.withdraw(amount: price*0.95) as! @FlowToken.Vault   \r\n        let paymentToDeveloper <- acct.borrow<&FlowToken.Vault>(from:/storage/flowTokenVault)!.withdraw(amount: price*0.05) as! @FlowToken.Vault \r\n\r\n      saleCollection.purchaseFootballClip(recepientCollection:recepientCollection,payment:<-payment, id:id,paymentToDeveloper:<-paymentToDeveloper)\r\n  \r\n }  \r\n\r\n}\r\n    `","export const purchasePlayer =\r\n\r\n    `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\n\r\ntransaction(account:Address,id:UInt64) {\r\n\r\n    \r\nprepare(acct: AuthAccount) { //acct - account that calls the transaction\r\n   \r\n\r\n        let saleCollection = getAccount(account).getCapability(/public/MySaleCollection)\r\n     .borrow<&Marketplace.SaleCollection{Marketplace.SaleCollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n        let recepientCollection = getAccount(acct.address).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")  \r\n\r\n        let price=saleCollection.getPriceOfPlayer(id:id);\r\n        let payment <- acct.borrow<&FlowToken.Vault>(from:/storage/flowTokenVault)!.withdraw(amount: price*0.95) as! @FlowToken.Vault   \r\n        let paymentToDeveloper <- acct.borrow<&FlowToken.Vault>(from:/storage/flowTokenVault)!.withdraw(amount: price*0.05) as! @FlowToken.Vault \r\n\r\n      saleCollection.purchasePlayer(recepientCollection:recepientCollection,payment:<-payment, id:id,paymentToDeveloper:<-paymentToDeveloper)\r\n  \r\n }  \r\n\r\n}\r\n    `","export const makeFamily=`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\ntransaction(name:String, price: UFix64) {\r\n\r\nprepare(acct:AuthAccount){\r\n \r\n  let admin = acct.borrow<&FootballClipNFT.Admin>(from: FootballClipNFT.AdminStoragePath)\r\n                                                             ?? panic (\"This collection does not exist here\")                                                           \r\n\r\n  // access account storage of sender of transaction \r\n\r\n  admin.createFamily(name:name,price:price);\r\n  \r\n}\r\n\r\n}`","export const addTemplateToFamily= `\r\n    import FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\ntransaction(familyID:UInt32, templateID: UInt32)  {\r\n\r\nprepare(acct:AuthAccount){\r\n \r\n  let admin = acct.borrow<&FootballClipNFT.Admin>(from: FootballClipNFT.AdminStoragePath)\r\n                                                             ?? panic (\"This collection does not exist here\")                                                           \r\n\r\n  // access account storage of sender of transaction \r\n\r\n   let familyRef = admin.borrowFamily(familyID: familyID)\r\n    familyRef.addFootballClipTemplate(templateID: templateID)\r\n}\r\n   \r\n}\r\n    `","export const listFootballClipForSale =\r\n    `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\n\r\ntransaction(id:UInt64, price:UFix64,owner:Address) {\r\n\r\n    \r\nprepare(acct: AuthAccount) { //acct - account that calls the transaction\r\n    \r\n      let saleCollection = acct.borrow<&Marketplace.SaleCollection>(from: /storage/MySaleCollection)\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n   \r\n  saleCollection.listFootballClipForSale(id: id, price: price,owner:owner)\r\n  \r\n }  \r\n\r\n}\r\n    `","export const listPlayerForSale =\r\n    `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\n\r\ntransaction(id:UInt64, price:UFix64,owner:Address) {\r\n\r\n    \r\nprepare(acct: AuthAccount) { //acct - account that calls the transaction\r\n    \r\n      let saleCollection = acct.borrow<&Marketplace.SaleCollection>(from: /storage/MySaleCollection)\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n   \r\n    saleCollection.listPlayerForSale(id: id, price: price,owner:owner)\r\n  \r\n }  \r\n\r\n}\r\n    `","export const unlistFootballClipFromSale =\r\n    `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\n\r\ntransaction(id:UInt64) {\r\n\r\n    \r\nprepare(acct: AuthAccount) { //acct - account that calls the transaction\r\n    \r\n      let saleCollection = acct.borrow<&Marketplace.SaleCollection>(from: /storage/MySaleCollection)\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n   \r\n  saleCollection.unlistFootballClipFromSale(id: id)\r\n  \r\n }  \r\n\r\n}\r\n        `","export const destroyFamily=\r\n    `import FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\ntransaction(familyID:UInt32) {\r\n\r\n    prepare(acct:AuthAccount){\r\n\r\n        let admin = acct.borrow<&FootballClipNFT.Admin>(from: FootballClipNFT.AdminStoragePath)\r\n            ?? panic (\"This collection does not exist here\")\r\n\r\n        // access account storage of sender of transaction \r\n\r\n        admin.destroyFamily(familyID: familyID)\r\n\r\n    }\r\n\r\n}`","export const unlistPlayerFromSale =\r\n    `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\n\r\ntransaction(id:UInt64) {\r\n\r\n    \r\nprepare(acct: AuthAccount) { //acct - account that calls the transaction\r\n    \r\n      let saleCollection = acct.borrow<&Marketplace.SaleCollection>(from: /storage/MySaleCollection)\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n   \r\n  saleCollection.unlistPlayerFromSale(id: id)\r\n  \r\n }  \r\n}\r\n        `","export const setUp = `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\n\r\ntransaction(favouriteTeam:String) {\r\n\r\n    \r\nprepare(acct: AuthAccount) { //acct - account that calls the transaction\r\n      acct.save(<-FootballClipNFT.createEmptyCollection(favouriteTeam:favouriteTeam),to: FootballClipNFT.CollectionStoragePath) \r\n      //creates empty collection in account storage of user that can be found: to:/storage/MySaxionNFTCollection\r\n      acct.link<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>(FootballClipNFT.CollectionPublicPath,target: FootballClipNFT.CollectionStoragePath) \r\n      // link our newly created collection to the public that is restricted to CollectionPublic interface:\r\n      //only deposit, borrowNFT, getIds are availbale\r\n      acct.link<&FootballClipNFT.Collection>(FootballClipNFT.CollectionPrivatePath,target: FootballClipNFT.CollectionStoragePath) \r\n \r\n    let MyNFTCollection = acct.getCapability<&FootballClipNFT.Collection>(FootballClipNFT.CollectionPrivatePath)\r\n    \r\n    let FlowTokenVault = acct.getCapability<&FlowToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)\r\n    \r\n    let developerAccountAddress:Address=0xc8af9ee840bc6aab\r\n    let FlowTokenVaultOfDeveloper = getAccount(developerAccountAddress).getCapability<&FlowToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)\r\n    \r\n    acct.save(<- Marketplace.createEmptySaleCollection(MyNFTCollection: MyNFTCollection, FlowTokenVault: FlowTokenVault,developerAccountAddress:developerAccountAddress), to: /storage/MySaleCollection)\r\n    acct.link<&Marketplace.SaleCollection{Marketplace.SaleCollectionPublic}>(/public/MySaleCollection, target: /storage/MySaleCollection)\r\n }  \r\n\r\n}\r\n`","export const getUserFootballClips =\r\n    `\r\n    import FootballClipNFT from 0xc8af9ee840bc6aab\r\n    import NonFungibleToken from 0x631e88ae7f1d7c20\r\n    \r\n  pub fun main(account:Address) : [&FootballClipNFT.FootballClip] {\r\n\r\n    \r\n    let collection = getAccount(account).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n    let res: [&FootballClipNFT.FootballClip] = []\r\n    var ids = collection.getIDsOfFootballClips()\r\n\r\n    for id in ids{\r\n      res.append(collection.borrowEntireFootballClip(id: id))\r\n    }\r\n\r\n    return res                            \r\n                                                       \r\n}                          \r\n                                                       \r\n    `","export const getUserPlayers =\r\n    `\r\n    import FootballClipNFT from 0xc8af9ee840bc6aab\r\n    import NonFungibleToken from 0x631e88ae7f1d7c20\r\n    \r\n pub fun main(account:Address) : [&FootballClipNFT.Player] {\r\n\r\n    \r\n    let collection = getAccount(account).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n    let res: [&FootballClipNFT.Player] = []\r\n    var ids = collection.getIDsOfPlayers()\r\n\r\n    for id in ids{\r\n      res.append(collection.borrowEntirePlayer(id: id))\r\n    }\r\n\r\n    return res                            \r\n                                                       \r\n} `\r\n","export const getSellingNFTs =`\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\n    \r\npub fun main() : {UInt64: Marketplace.FootballClipForSale} {\r\n\r\n  return Marketplace.getSaleFootballClips()\r\n                                                       \r\n}\r\n`","export const getSellingPlayers =`\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\n\r\npub fun main() : {UInt64: Marketplace.PlayerForSale} {\r\n\r\n    return Marketplace.getSalePlayers()\r\n\r\n}`","export const getUserFootballClipsForSale =\r\n    `\r\n    import FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\n    \r\npub fun main(account:Address) : {UInt64: Marketplace.SaleFootballClip} {\r\n\r\n    \r\n    let collection = getAccount(account).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n    let saleCollection = getAccount(account).getCapability(/public/MySaleCollection)\r\n     .borrow<&Marketplace.SaleCollection{Marketplace.SaleCollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n                \r\nlet saleIDs = saleCollection.getIdsOfFootballClips()\r\n   let returnVals: {UInt64: Marketplace.SaleFootballClip} = {}\r\n  for saleID in saleIDs {\r\n    let price = saleCollection.getPriceOfFootballClip(id: saleID)\r\n    let nftRef = collection.borrowEntireFootballClip(id: saleID)\r\n    returnVals.insert(key: nftRef.id, Marketplace.SaleFootballClip(_price: price, _nftRef: nftRef))\r\n  }\r\n  return returnVals\r\n                                                       \r\n}\r\n    `","export const getUserPlayersForSale =\r\n    `\r\n    import FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport Marketplace from 0xc8af9ee840bc6aab\r\n    \r\npub fun main(account:Address) : {UInt64: Marketplace.SalePlayer} {\r\n\r\n    \r\n    let collection = getAccount(account).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n    let saleCollection = getAccount(account).getCapability(/public/MySaleCollection)\r\n     .borrow<&Marketplace.SaleCollection{Marketplace.SaleCollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n                \r\nlet saleIDs = saleCollection.getIdsOfPlayers()\r\n   let returnVals: {UInt64: Marketplace.SalePlayer} = {}\r\n  for saleID in saleIDs {\r\n    let price = saleCollection.getPriceOfPlayer(id: saleID)\r\n    let nftRef = collection.borrowEntirePlayer(id: saleID)\r\n    returnVals.insert(key: nftRef.id, Marketplace.SalePlayer(_price: price, _nftRef: nftRef))\r\n  }\r\n  return returnVals\r\n                                                       \r\n}\r\n    `","export const createFootballClipTemplate = `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\ntransaction(rarity:String, name:String, ipfs:String) {\r\n\r\nprepare(acct:AuthAccount){\r\n \r\n  let admin = acct.borrow<&FootballClipNFT.Admin>(from: FootballClipNFT.AdminStoragePath)\r\n                                                             ?? panic (\"This collection does not exist here\")                                                           \r\n\r\n  // access account storage of sender of transaction \r\n\r\n  admin.createFootballClipTemplate(rarity: rarity, name: name, ipfs:ipfs)\r\n \r\n}\r\n  \r\n}\r\n    `","export const createPlayerTemplate = `\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\ntransaction(rarity:String, name:String, ipfs:String) {\r\n\r\nprepare(acct:AuthAccount){\r\n \r\n  let admin = acct.borrow<&FootballClipNFT.Admin>(from: FootballClipNFT.AdminStoragePath)\r\n                                                             ?? panic (\"This collection does not exist here\")                                                           \r\n\r\n  // access account storage of sender of transaction \r\n\r\n  admin.createPlayerTemplate(rarity: rarity, name: name, ipfs:ipfs)\r\n \r\n}\r\n  \r\n}\r\n    `","export const getTemplatesOfFootballClips=`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\n\r\npub fun main() : {UInt32: FootballClipNFT.Template}  {\r\n\r\n    \r\n    let templates=FootballClipNFT.listFootballClipTemplates()\r\n\r\n    return templates                       \r\n                                                       \r\n}\r\n`","export const getTemplatesOfPlayers=`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\n\r\npub fun main() : {UInt32: FootballClipNFT.Template}  {\r\n\r\n    \r\n    let templates=FootballClipNFT.listPlayerTemplates()\r\n\r\n    return templates                       \r\n                                                       \r\n}\r\n`","export const getFamilies=`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\n    \r\npub fun main() : [FootballClipNFT.FamilyReport]  {\r\n            \r\n    let families = FootballClipNFT.listFamilies()\r\n    return families                                                              \r\n}\r\n`","export const getCompletedChallengesOfUser=\r\n    `import FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\n    \r\npub fun main(account:Address) : [UInt32] {\r\n      \r\n    let collection = getAccount(account).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n    return collection.listCompletedChallenges()                        \r\n                                                       \r\n}`","export const deleteFootballClipTemplate=`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\ntransaction(templateID:UInt32) {\r\n\r\nprepare(acct:AuthAccount){\r\n \r\n  let admin = acct.borrow<&FootballClipNFT.Admin>(from: FootballClipNFT.AdminStoragePath)\r\n                                                             ?? panic (\"This collection does not exist here\")                                                           \r\n\r\n  // access account storage of sender of transaction \r\n\r\n  admin.destroyFootballClipTemplate(footballClipID: templateID)\r\n \r\n}\r\n\r\n}\r\n`","export const batchMintFootballClipsFromFamily =`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\n\r\ntransaction(familyID: UInt32, templateIDs: [UInt32] ) {\r\n \r\n  prepare(acct: AuthAccount) {\r\n    let receiverReference: &FootballClipNFT.Collection{FootballClipNFT.Receiver} = acct.borrow<&FootballClipNFT.Collection>(from: FootballClipNFT.CollectionStoragePath) \r\n        ?? panic(\"Cannot borrow\")\r\n        let family=FootballClipNFT.getFamily(familyID:familyID)\r\n        let price=family.price;\r\n     let payment <- acct.borrow<&FlowToken.Vault>(from:/storage/flowTokenVault)!.withdraw(amount: price) as! @FlowToken.Vault   \r\n      let collection <- FootballClipNFT.batchMintFootballClipsFromFamily(familyID: familyID, templateIDs: templateIDs, paymentVault: <-payment)\r\n    receiverReference.batchDeposit(collection: <-collection)\r\n  }\r\n\r\n}\r\n`","export const addSpecialChallenge=\r\n    `import FootballClipNFT from 0xc8af9ee840bc6aab\r\n\r\ntransaction(task:[UInt32], reward:[UInt32],favouriteTeam:String) {\r\n\r\nprepare(acct:AuthAccount){\r\n \r\n  let admin = acct.borrow<&FootballClipNFT.Admin>(from: FootballClipNFT.AdminStoragePath)\r\n                                                             ?? panic (\"This collection does not exist here\")                                                           \r\n\r\n  // access account storage of sender of transaction \r\n\r\n  admin.addFavouriteTeamChallenge(task:task,reward:reward,favouriteTeam:favouriteTeam)\r\n}\r\n   \r\n}\r\n    `","export const getRegularCustomizedChallenges=`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\n    \r\npub fun main(account:Address) : {UInt32: FootballClipNFT.Challenge}  {\r\nlet collection = getAccount(account).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")  \r\n    \r\n\r\n     let challenges=collection.getCustomizedRegularChallenges()\r\n    \r\n    return challenges                        \r\n                                                       \r\n}\r\n`","export const getSpecialCustomizedChallenges=`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\n    \r\npub fun main(account:Address) : FootballClipNFT.FavouriteTeamChallenge  {\r\nlet collection = getAccount(account).getCapability(FootballClipNFT.CollectionPublicPath)\r\n     .borrow<&FootballClipNFT.Collection{FootballClipNFT.CollectionPublic}>()\r\n                                                             ?? panic (\"This collection does not exist here\")  \r\n    \r\n\r\n     let challenge=collection.getFavouriteTeamChallenge()\r\n    \r\n    return challenge              \r\n                                                       \r\n}\r\n`","export const mintReward=`\r\nimport FootballClipNFT from 0xc8af9ee840bc6aab\r\ntransaction(challengeID:UInt32) {\r\n\r\nprepare(acct:AuthAccount){\r\n  let collection = acct.borrow<&FootballClipNFT.Collection>(from: FootballClipNFT.CollectionStoragePath)\r\n                                                             ?? panic (\"This collection does not exist here\")\r\n\r\n   FootballClipNFT.mintReward(userCollection:collection,challengeID:challengeID)\r\n}\r\n  \r\n}\r\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}